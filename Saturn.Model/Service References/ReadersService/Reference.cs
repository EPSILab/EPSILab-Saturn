//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EPSILab.SolarSystem.Saturn.Model.ReadersService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Conference", Namespace="http://schemas.datacontract.org/2004/07/EPSILab.SolarSystem.Earth.Common")]
    public partial class Conference : object, System.ComponentModel.INotifyPropertyChanged {
        
        private EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus CampusField;
        
        private string DescriptionField;
        
        private System.DateTime End_DateTimeField;
        
        private int IdField;
        
        private string ImageUrlField;
        
        private bool IsPublishedField;
        
        private string NameField;
        
        private string PlaceField;
        
        private System.DateTime Start_DateTimeField;
        
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus Campus {
            get {
                return this.CampusField;
            }
            set {
                if ((object.ReferenceEquals(this.CampusField, value) != true)) {
                    this.CampusField = value;
                    this.RaisePropertyChanged("Campus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End_DateTime {
            get {
                return this.End_DateTimeField;
            }
            set {
                if ((this.End_DateTimeField.Equals(value) != true)) {
                    this.End_DateTimeField = value;
                    this.RaisePropertyChanged("End_DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start_DateTime {
            get {
                return this.Start_DateTimeField;
            }
            set {
                if ((this.Start_DateTimeField.Equals(value) != true)) {
                    this.Start_DateTimeField = value;
                    this.RaisePropertyChanged("Start_DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Campus", Namespace="http://schemas.datacontract.org/2004/07/EPSILab.SolarSystem.Earth.Common")]
    public partial class Campus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContactEmailField;
        
        private int IdField;
        
        private string PlaceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Link", Namespace="http://schemas.datacontract.org/2004/07/EPSILab.SolarSystem.Earth.Common")]
    public partial class Link : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int IdField;
        
        private string ImageUrlField;
        
        private string LabelField;
        
        private System.Nullable<int> OrderField;
        
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Member", Namespace="http://schemas.datacontract.org/2004/07/EPSILab.SolarSystem.Earth.Common")]
    public partial class Member : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool ActiveField;
        
        private EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus CampusField;
        
        private string CityFromField;
        
        private string EPSIEmailField;
        
        private string FacebookUrlField;
        
        private string FirstNameField;
        
        private string GitHubUrlField;
        
        private int IdField;
        
        private string ImageUrlField;
        
        private string LastNameField;
        
        private string LinkedInUrlField;
        
        private string PersonalEmailField;
        
        private string PhoneNumberField;
        
        private string PresentationField;
        
        private EPSILab.SolarSystem.Saturn.Model.ReadersService.Promotion PromotionField;
        
        private EPSILab.SolarSystem.Saturn.Model.ReadersService.Role RoleField;
        
        private string StatusField;
        
        private string TwitterUrlField;
        
        private string UrlField;
        
        private string UsernameField;
        
        private string ViadeoUrlField;
        
        private string WebsiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus Campus {
            get {
                return this.CampusField;
            }
            set {
                if ((object.ReferenceEquals(this.CampusField, value) != true)) {
                    this.CampusField = value;
                    this.RaisePropertyChanged("Campus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityFrom {
            get {
                return this.CityFromField;
            }
            set {
                if ((object.ReferenceEquals(this.CityFromField, value) != true)) {
                    this.CityFromField = value;
                    this.RaisePropertyChanged("CityFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPSIEmail {
            get {
                return this.EPSIEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EPSIEmailField, value) != true)) {
                    this.EPSIEmailField = value;
                    this.RaisePropertyChanged("EPSIEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacebookUrl {
            get {
                return this.FacebookUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookUrlField, value) != true)) {
                    this.FacebookUrlField = value;
                    this.RaisePropertyChanged("FacebookUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GitHubUrl {
            get {
                return this.GitHubUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.GitHubUrlField, value) != true)) {
                    this.GitHubUrlField = value;
                    this.RaisePropertyChanged("GitHubUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkedInUrl {
            get {
                return this.LinkedInUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedInUrlField, value) != true)) {
                    this.LinkedInUrlField = value;
                    this.RaisePropertyChanged("LinkedInUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalEmail {
            get {
                return this.PersonalEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalEmailField, value) != true)) {
                    this.PersonalEmailField = value;
                    this.RaisePropertyChanged("PersonalEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Presentation {
            get {
                return this.PresentationField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationField, value) != true)) {
                    this.PresentationField = value;
                    this.RaisePropertyChanged("Presentation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Promotion Promotion {
            get {
                return this.PromotionField;
            }
            set {
                if ((object.ReferenceEquals(this.PromotionField, value) != true)) {
                    this.PromotionField = value;
                    this.RaisePropertyChanged("Promotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Role Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TwitterUrl {
            get {
                return this.TwitterUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.TwitterUrlField, value) != true)) {
                    this.TwitterUrlField = value;
                    this.RaisePropertyChanged("TwitterUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViadeoUrl {
            get {
                return this.ViadeoUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ViadeoUrlField, value) != true)) {
                    this.ViadeoUrlField = value;
                    this.RaisePropertyChanged("ViadeoUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Promotion", Namespace="http://schemas.datacontract.org/2004/07/EPSILab.SolarSystem.Earth.Common")]
    public partial class Promotion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int GraduationYearField;
        
        private int IdField;
        
        private string NameField;
        
        private bool StillPresentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GraduationYear {
            get {
                return this.GraduationYearField;
            }
            set {
                if ((this.GraduationYearField.Equals(value) != true)) {
                    this.GraduationYearField = value;
                    this.RaisePropertyChanged("GraduationYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StillPresent {
            get {
                return this.StillPresentField;
            }
            set {
                if ((this.StillPresentField.Equals(value) != true)) {
                    this.StillPresentField = value;
                    this.RaisePropertyChanged("StillPresent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/EPSILab.SolarSystem.Earth.Common")]
    public enum Role : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemberActive = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bureau = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="News", Namespace="http://schemas.datacontract.org/2004/07/EPSILab.SolarSystem.Earth.Common")]
    public partial class News : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateTimeField;
        
        private int IdField;
        
        private string ImageUrlField;
        
        private bool IsPublishedField;
        
        private string KeywordsField;
        
        private EPSILab.SolarSystem.Saturn.Model.ReadersService.Member MemberField;
        
        private string ShortTextField;
        
        private string TextField;
        
        private string TitleField;
        
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keywords {
            get {
                return this.KeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordsField, value) != true)) {
                    this.KeywordsField = value;
                    this.RaisePropertyChanged("Keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member Member {
            get {
                return this.MemberField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberField, value) != true)) {
                    this.MemberField = value;
                    this.RaisePropertyChanged("Member");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortText {
            get {
                return this.ShortTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortTextField, value) != true)) {
                    this.ShortTextField = value;
                    this.RaisePropertyChanged("ShortText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/EPSILab.SolarSystem.Earth.Common")]
    public partial class Project : object, System.ComponentModel.INotifyPropertyChanged {
        
        private EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus CampusField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private string ImageUrlField;
        
        private string NameField;
        
        private int ProgressionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus Campus {
            get {
                return this.CampusField;
            }
            set {
                if ((object.ReferenceEquals(this.CampusField, value) != true)) {
                    this.CampusField = value;
                    this.RaisePropertyChanged("Campus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Progression {
            get {
                return this.ProgressionField;
            }
            set {
                if ((this.ProgressionField.Equals(value) != true)) {
                    this.ProgressionField = value;
                    this.RaisePropertyChanged("Progression");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Slide", Namespace="http://schemas.datacontract.org/2004/07/EPSILab.SolarSystem.Earth.Common")]
    public partial class Slide : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string ImageUrlField;
        
        private bool IsPublishedField;
        
        private string NameField;
        
        private string PresentationField;
        
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Presentation {
            get {
                return this.PresentationField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationField, value) != true)) {
                    this.PresentationField = value;
                    this.RaisePropertyChanged("Presentation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Show", Namespace="http://schemas.datacontract.org/2004/07/EPSILab.SolarSystem.Earth.Common")]
    public partial class Show : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private System.DateTime End_DateTimeField;
        
        private int IdField;
        
        private string ImageUrlField;
        
        private bool IsPublishedField;
        
        private string NameField;
        
        private string PlaceField;
        
        private System.DateTime Start_DateTimeField;
        
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End_DateTime {
            get {
                return this.End_DateTimeField;
            }
            set {
                if ((this.End_DateTimeField.Equals(value) != true)) {
                    this.End_DateTimeField = value;
                    this.RaisePropertyChanged("End_DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start_DateTime {
            get {
                return this.Start_DateTimeField;
            }
            set {
                if ((this.Start_DateTimeField.Equals(value) != true)) {
                    this.Start_DateTimeField = value;
                    this.RaisePropertyChanged("Start_DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadersService.IConferenceReader")]
    public interface IConferenceReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConference", ReplyAction="http://tempuri.org/IConferenceReader/GetConferenceResponse")]
        System.IAsyncResult BeginGetConference(int code, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference EndGetConference(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConferences", ReplyAction="http://tempuri.org/IConferenceReader/GetConferencesResponse")]
        System.IAsyncResult BeginGetConferences(System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EndGetConferences(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConferencesLimited", ReplyAction="http://tempuri.org/IConferenceReader/GetConferencesLimitedResponse")]
        System.IAsyncResult BeginGetConferencesLimited(int indexFirstResult, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EndGetConferencesLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConferencesByCampus", ReplyAction="http://tempuri.org/IConferenceReader/GetConferencesByCampusResponse")]
        System.IAsyncResult BeginGetConferencesByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EndGetConferencesByCampus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConferencesByCampusLimited", ReplyAction="http://tempuri.org/IConferenceReader/GetConferencesByCampusLimitedResponse")]
        System.IAsyncResult BeginGetConferencesByCampusLimited(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, int indexFirstResult, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EndGetConferencesByCampusLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConferenceLastInsertedId", ReplyAction="http://tempuri.org/IConferenceReader/GetConferenceLastInsertedIdResponse")]
        System.IAsyncResult BeginGetConferenceLastInsertedId(System.AsyncCallback callback, object asyncState);
        
        int EndGetConferenceLastInsertedId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/SearchConferences", ReplyAction="http://tempuri.org/IConferenceReader/SearchConferencesResponse")]
        System.IAsyncResult BeginSearchConferences(string keywords, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EndSearchConferences(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConferenceReaderChannel : EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferencesLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferencesLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferencesByCampusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferencesByCampusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferencesByCampusLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferencesByCampusLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferenceLastInsertedIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferenceLastInsertedIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchConferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchConferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConferenceReaderClient : System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader {
        
        private BeginOperationDelegate onBeginGetConferenceDelegate;
        
        private EndOperationDelegate onEndGetConferenceDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferenceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConferencesDelegate;
        
        private EndOperationDelegate onEndGetConferencesDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferencesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConferencesLimitedDelegate;
        
        private EndOperationDelegate onEndGetConferencesLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferencesLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConferencesByCampusDelegate;
        
        private EndOperationDelegate onEndGetConferencesByCampusDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferencesByCampusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConferencesByCampusLimitedDelegate;
        
        private EndOperationDelegate onEndGetConferencesByCampusLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferencesByCampusLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConferenceLastInsertedIdDelegate;
        
        private EndOperationDelegate onEndGetConferenceLastInsertedIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferenceLastInsertedIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchConferencesDelegate;
        
        private EndOperationDelegate onEndSearchConferencesDelegate;
        
        private System.Threading.SendOrPostCallback onSearchConferencesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ConferenceReaderClient() : 
                base(ConferenceReaderClient.GetDefaultBinding(), ConferenceReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public ConferenceReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(ConferenceReaderClient.GetBindingForEndpoint(endpointConfiguration), ConferenceReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public ConferenceReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ConferenceReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public ConferenceReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ConferenceReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public ConferenceReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetConferenceCompletedEventArgs> GetConferenceCompleted;
        
        public event System.EventHandler<GetConferencesCompletedEventArgs> GetConferencesCompleted;
        
        public event System.EventHandler<GetConferencesLimitedCompletedEventArgs> GetConferencesLimitedCompleted;
        
        public event System.EventHandler<GetConferencesByCampusCompletedEventArgs> GetConferencesByCampusCompleted;
        
        public event System.EventHandler<GetConferencesByCampusLimitedCompletedEventArgs> GetConferencesByCampusLimitedCompleted;
        
        public event System.EventHandler<GetConferenceLastInsertedIdCompletedEventArgs> GetConferenceLastInsertedIdCompleted;
        
        public event System.EventHandler<SearchConferencesCompletedEventArgs> SearchConferencesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.BeginGetConference(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConference(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.EndGetConference(System.IAsyncResult result) {
            return base.Channel.EndGetConference(result);
        }
        
        private System.IAsyncResult OnBeginGetConference(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).BeginGetConference(code, callback, asyncState);
        }
        
        private object[] OnEndGetConference(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).EndGetConference(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferenceCompleted(object state) {
            if ((this.GetConferenceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferenceCompleted(this, new GetConferenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferenceAsync(int code) {
            this.GetConferenceAsync(code, null);
        }
        
        public void GetConferenceAsync(int code, object userState) {
            if ((this.onBeginGetConferenceDelegate == null)) {
                this.onBeginGetConferenceDelegate = new BeginOperationDelegate(this.OnBeginGetConference);
            }
            if ((this.onEndGetConferenceDelegate == null)) {
                this.onEndGetConferenceDelegate = new EndOperationDelegate(this.OnEndGetConference);
            }
            if ((this.onGetConferenceCompletedDelegate == null)) {
                this.onGetConferenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferenceCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferenceDelegate, new object[] {
                        code}, this.onEndGetConferenceDelegate, this.onGetConferenceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.BeginGetConferences(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConferences(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.EndGetConferences(System.IAsyncResult result) {
            return base.Channel.EndGetConferences(result);
        }
        
        private System.IAsyncResult OnBeginGetConferences(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).BeginGetConferences(callback, asyncState);
        }
        
        private object[] OnEndGetConferences(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).EndGetConferences(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferencesCompleted(object state) {
            if ((this.GetConferencesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferencesCompleted(this, new GetConferencesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferencesAsync() {
            this.GetConferencesAsync(null);
        }
        
        public void GetConferencesAsync(object userState) {
            if ((this.onBeginGetConferencesDelegate == null)) {
                this.onBeginGetConferencesDelegate = new BeginOperationDelegate(this.OnBeginGetConferences);
            }
            if ((this.onEndGetConferencesDelegate == null)) {
                this.onEndGetConferencesDelegate = new EndOperationDelegate(this.OnEndGetConferences);
            }
            if ((this.onGetConferencesCompletedDelegate == null)) {
                this.onGetConferencesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferencesCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferencesDelegate, null, this.onEndGetConferencesDelegate, this.onGetConferencesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.BeginGetConferencesLimited(int indexFirstResult, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConferencesLimited(indexFirstResult, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.EndGetConferencesLimited(System.IAsyncResult result) {
            return base.Channel.EndGetConferencesLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetConferencesLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstResult = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).BeginGetConferencesLimited(indexFirstResult, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetConferencesLimited(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).EndGetConferencesLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferencesLimitedCompleted(object state) {
            if ((this.GetConferencesLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferencesLimitedCompleted(this, new GetConferencesLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferencesLimitedAsync(int indexFirstResult, int numberOfResults) {
            this.GetConferencesLimitedAsync(indexFirstResult, numberOfResults, null);
        }
        
        public void GetConferencesLimitedAsync(int indexFirstResult, int numberOfResults, object userState) {
            if ((this.onBeginGetConferencesLimitedDelegate == null)) {
                this.onBeginGetConferencesLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetConferencesLimited);
            }
            if ((this.onEndGetConferencesLimitedDelegate == null)) {
                this.onEndGetConferencesLimitedDelegate = new EndOperationDelegate(this.OnEndGetConferencesLimited);
            }
            if ((this.onGetConferencesLimitedCompletedDelegate == null)) {
                this.onGetConferencesLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferencesLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferencesLimitedDelegate, new object[] {
                        indexFirstResult,
                        numberOfResults}, this.onEndGetConferencesLimitedDelegate, this.onGetConferencesLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.BeginGetConferencesByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConferencesByCampus(campus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.EndGetConferencesByCampus(System.IAsyncResult result) {
            return base.Channel.EndGetConferencesByCampus(result);
        }
        
        private System.IAsyncResult OnBeginGetConferencesByCampus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).BeginGetConferencesByCampus(campus, callback, asyncState);
        }
        
        private object[] OnEndGetConferencesByCampus(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).EndGetConferencesByCampus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferencesByCampusCompleted(object state) {
            if ((this.GetConferencesByCampusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferencesByCampusCompleted(this, new GetConferencesByCampusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferencesByCampusAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus) {
            this.GetConferencesByCampusAsync(campus, null);
        }
        
        public void GetConferencesByCampusAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, object userState) {
            if ((this.onBeginGetConferencesByCampusDelegate == null)) {
                this.onBeginGetConferencesByCampusDelegate = new BeginOperationDelegate(this.OnBeginGetConferencesByCampus);
            }
            if ((this.onEndGetConferencesByCampusDelegate == null)) {
                this.onEndGetConferencesByCampusDelegate = new EndOperationDelegate(this.OnEndGetConferencesByCampus);
            }
            if ((this.onGetConferencesByCampusCompletedDelegate == null)) {
                this.onGetConferencesByCampusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferencesByCampusCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferencesByCampusDelegate, new object[] {
                        campus}, this.onEndGetConferencesByCampusDelegate, this.onGetConferencesByCampusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.BeginGetConferencesByCampusLimited(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, int indexFirstResult, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConferencesByCampusLimited(campus, indexFirstResult, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.EndGetConferencesByCampusLimited(System.IAsyncResult result) {
            return base.Channel.EndGetConferencesByCampusLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetConferencesByCampusLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus)(inValues[0]));
            int indexFirstResult = ((int)(inValues[1]));
            int numberOfResults = ((int)(inValues[2]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).BeginGetConferencesByCampusLimited(campus, indexFirstResult, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetConferencesByCampusLimited(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).EndGetConferencesByCampusLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferencesByCampusLimitedCompleted(object state) {
            if ((this.GetConferencesByCampusLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferencesByCampusLimitedCompleted(this, new GetConferencesByCampusLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferencesByCampusLimitedAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, int indexFirstResult, int numberOfResults) {
            this.GetConferencesByCampusLimitedAsync(campus, indexFirstResult, numberOfResults, null);
        }
        
        public void GetConferencesByCampusLimitedAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, int indexFirstResult, int numberOfResults, object userState) {
            if ((this.onBeginGetConferencesByCampusLimitedDelegate == null)) {
                this.onBeginGetConferencesByCampusLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetConferencesByCampusLimited);
            }
            if ((this.onEndGetConferencesByCampusLimitedDelegate == null)) {
                this.onEndGetConferencesByCampusLimitedDelegate = new EndOperationDelegate(this.OnEndGetConferencesByCampusLimited);
            }
            if ((this.onGetConferencesByCampusLimitedCompletedDelegate == null)) {
                this.onGetConferencesByCampusLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferencesByCampusLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferencesByCampusLimitedDelegate, new object[] {
                        campus,
                        indexFirstResult,
                        numberOfResults}, this.onEndGetConferencesByCampusLimitedDelegate, this.onGetConferencesByCampusLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.BeginGetConferenceLastInsertedId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConferenceLastInsertedId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.EndGetConferenceLastInsertedId(System.IAsyncResult result) {
            return base.Channel.EndGetConferenceLastInsertedId(result);
        }
        
        private System.IAsyncResult OnBeginGetConferenceLastInsertedId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).BeginGetConferenceLastInsertedId(callback, asyncState);
        }
        
        private object[] OnEndGetConferenceLastInsertedId(System.IAsyncResult result) {
            int retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).EndGetConferenceLastInsertedId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferenceLastInsertedIdCompleted(object state) {
            if ((this.GetConferenceLastInsertedIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferenceLastInsertedIdCompleted(this, new GetConferenceLastInsertedIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferenceLastInsertedIdAsync() {
            this.GetConferenceLastInsertedIdAsync(null);
        }
        
        public void GetConferenceLastInsertedIdAsync(object userState) {
            if ((this.onBeginGetConferenceLastInsertedIdDelegate == null)) {
                this.onBeginGetConferenceLastInsertedIdDelegate = new BeginOperationDelegate(this.OnBeginGetConferenceLastInsertedId);
            }
            if ((this.onEndGetConferenceLastInsertedIdDelegate == null)) {
                this.onEndGetConferenceLastInsertedIdDelegate = new EndOperationDelegate(this.OnEndGetConferenceLastInsertedId);
            }
            if ((this.onGetConferenceLastInsertedIdCompletedDelegate == null)) {
                this.onGetConferenceLastInsertedIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferenceLastInsertedIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferenceLastInsertedIdDelegate, null, this.onEndGetConferenceLastInsertedIdDelegate, this.onGetConferenceLastInsertedIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.BeginSearchConferences(string keywords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchConferences(keywords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader.EndSearchConferences(System.IAsyncResult result) {
            return base.Channel.EndSearchConferences(result);
        }
        
        private System.IAsyncResult OnBeginSearchConferences(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keywords = ((string)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).BeginSearchConferences(keywords, callback, asyncState);
        }
        
        private object[] OnEndSearchConferences(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader)(this)).EndSearchConferences(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchConferencesCompleted(object state) {
            if ((this.SearchConferencesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchConferencesCompleted(this, new SearchConferencesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchConferencesAsync(string keywords) {
            this.SearchConferencesAsync(keywords, null);
        }
        
        public void SearchConferencesAsync(string keywords, object userState) {
            if ((this.onBeginSearchConferencesDelegate == null)) {
                this.onBeginSearchConferencesDelegate = new BeginOperationDelegate(this.OnBeginSearchConferences);
            }
            if ((this.onEndSearchConferencesDelegate == null)) {
                this.onEndSearchConferencesDelegate = new EndOperationDelegate(this.OnEndSearchConferences);
            }
            if ((this.onSearchConferencesCompletedDelegate == null)) {
                this.onSearchConferencesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchConferencesCompleted);
            }
            base.InvokeAsync(this.onBeginSearchConferencesDelegate, new object[] {
                        keywords}, this.onEndSearchConferencesDelegate, this.onSearchConferencesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader CreateChannel() {
            return new ConferenceReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IConferenceReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IConferenceReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ConferenceReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IConferenceReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ConferenceReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IConferenceReader);
        }
        
        private class ConferenceReaderClientChannel : ChannelBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader {
            
            public ConferenceReaderClientChannel(System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IConferenceReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetConference(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetConference", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference EndGetConference(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference)(base.EndInvoke("GetConference", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConferences(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetConferences", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EndGetConferences(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[])(base.EndInvoke("GetConferences", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConferencesLimited(int indexFirstResult, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = indexFirstResult;
                _args[1] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetConferencesLimited", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EndGetConferencesLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[])(base.EndInvoke("GetConferencesLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConferencesByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = campus;
                System.IAsyncResult _result = base.BeginInvoke("GetConferencesByCampus", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EndGetConferencesByCampus(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[])(base.EndInvoke("GetConferencesByCampus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConferencesByCampusLimited(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, int indexFirstResult, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = campus;
                _args[1] = indexFirstResult;
                _args[2] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetConferencesByCampusLimited", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EndGetConferencesByCampusLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[])(base.EndInvoke("GetConferencesByCampusLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConferenceLastInsertedId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetConferenceLastInsertedId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetConferenceLastInsertedId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetConferenceLastInsertedId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchConferences(string keywords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = keywords;
                System.IAsyncResult _result = base.BeginInvoke("SearchConferences", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] EndSearchConferences(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Conference[])(base.EndInvoke("SearchConferences", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IConferenceReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadersService.ILinkReader")]
    public interface ILinkReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILinkReader/GetLink", ReplyAction="http://tempuri.org/ILinkReader/GetLinkResponse")]
        System.IAsyncResult BeginGetLink(int code, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Link EndGetLink(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILinkReader/GetLinks", ReplyAction="http://tempuri.org/ILinkReader/GetLinksResponse")]
        System.IAsyncResult BeginGetLinks(System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Link[] EndGetLinks(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILinkReaderChannel : EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Link Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Link)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Link[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Link[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LinkReaderClient : System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader {
        
        private BeginOperationDelegate onBeginGetLinkDelegate;
        
        private EndOperationDelegate onEndGetLinkDelegate;
        
        private System.Threading.SendOrPostCallback onGetLinkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLinksDelegate;
        
        private EndOperationDelegate onEndGetLinksDelegate;
        
        private System.Threading.SendOrPostCallback onGetLinksCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LinkReaderClient() : 
                base(LinkReaderClient.GetDefaultBinding(), LinkReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public LinkReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(LinkReaderClient.GetBindingForEndpoint(endpointConfiguration), LinkReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public LinkReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(LinkReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public LinkReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(LinkReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public LinkReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetLinkCompletedEventArgs> GetLinkCompleted;
        
        public event System.EventHandler<GetLinksCompletedEventArgs> GetLinksCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader.BeginGetLink(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLink(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Link EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader.EndGetLink(System.IAsyncResult result) {
            return base.Channel.EndGetLink(result);
        }
        
        private System.IAsyncResult OnBeginGetLink(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader)(this)).BeginGetLink(code, callback, asyncState);
        }
        
        private object[] OnEndGetLink(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Link retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader)(this)).EndGetLink(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLinkCompleted(object state) {
            if ((this.GetLinkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLinkCompleted(this, new GetLinkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLinkAsync(int code) {
            this.GetLinkAsync(code, null);
        }
        
        public void GetLinkAsync(int code, object userState) {
            if ((this.onBeginGetLinkDelegate == null)) {
                this.onBeginGetLinkDelegate = new BeginOperationDelegate(this.OnBeginGetLink);
            }
            if ((this.onEndGetLinkDelegate == null)) {
                this.onEndGetLinkDelegate = new EndOperationDelegate(this.OnEndGetLink);
            }
            if ((this.onGetLinkCompletedDelegate == null)) {
                this.onGetLinkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLinkCompleted);
            }
            base.InvokeAsync(this.onBeginGetLinkDelegate, new object[] {
                        code}, this.onEndGetLinkDelegate, this.onGetLinkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader.BeginGetLinks(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLinks(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Link[] EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader.EndGetLinks(System.IAsyncResult result) {
            return base.Channel.EndGetLinks(result);
        }
        
        private System.IAsyncResult OnBeginGetLinks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader)(this)).BeginGetLinks(callback, asyncState);
        }
        
        private object[] OnEndGetLinks(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Link[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader)(this)).EndGetLinks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLinksCompleted(object state) {
            if ((this.GetLinksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLinksCompleted(this, new GetLinksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLinksAsync() {
            this.GetLinksAsync(null);
        }
        
        public void GetLinksAsync(object userState) {
            if ((this.onBeginGetLinksDelegate == null)) {
                this.onBeginGetLinksDelegate = new BeginOperationDelegate(this.OnBeginGetLinks);
            }
            if ((this.onEndGetLinksDelegate == null)) {
                this.onEndGetLinksDelegate = new EndOperationDelegate(this.OnEndGetLinks);
            }
            if ((this.onGetLinksCompletedDelegate == null)) {
                this.onGetLinksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLinksCompleted);
            }
            base.InvokeAsync(this.onBeginGetLinksDelegate, null, this.onEndGetLinksDelegate, this.onGetLinksCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader CreateChannel() {
            return new LinkReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ILinkReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ILinkReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return LinkReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ILinkReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return LinkReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ILinkReader);
        }
        
        private class LinkReaderClientChannel : ChannelBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader {
            
            public LinkReaderClientChannel(System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.ILinkReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetLink(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetLink", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Link EndGetLink(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Link _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Link)(base.EndInvoke("GetLink", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLinks(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLinks", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Link[] EndGetLinks(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Link[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Link[])(base.EndInvoke("GetLinks", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_ILinkReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadersService.IMemberReader")]
    public interface IMemberReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMemberReader/GetMember", ReplyAction="http://tempuri.org/IMemberReader/GetMemberResponse")]
        System.IAsyncResult BeginGetMember(int code, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member EndGetMember(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMemberReader/GetMembers", ReplyAction="http://tempuri.org/IMemberReader/GetMembersResponse")]
        System.IAsyncResult BeginGetMembers(System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndGetMembers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMemberReader/GetMembersByCampus", ReplyAction="http://tempuri.org/IMemberReader/GetMembersByCampusResponse")]
        System.IAsyncResult BeginGetMembersByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndGetMembersByCampus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMemberReader/GetMembersBureau", ReplyAction="http://tempuri.org/IMemberReader/GetMembersBureauResponse")]
        System.IAsyncResult BeginGetMembersBureau(System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndGetMembersBureau(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMemberReader/GetMembersBureauByCampus", ReplyAction="http://tempuri.org/IMemberReader/GetMembersBureauByCampusResponse")]
        System.IAsyncResult BeginGetMembersBureauByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndGetMembersBureauByCampus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMemberReader/GetMembersAlumnis", ReplyAction="http://tempuri.org/IMemberReader/GetMembersAlumnisResponse")]
        System.IAsyncResult BeginGetMembersAlumnis(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndGetMembersAlumnis(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMemberReader/GetMemberLastInsertedId", ReplyAction="http://tempuri.org/IMemberReader/GetMemberLastInsertedIdResponse")]
        System.IAsyncResult BeginGetMemberLastInsertedId(System.AsyncCallback callback, object asyncState);
        
        int EndGetMemberLastInsertedId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMemberReader/SearchMembers", ReplyAction="http://tempuri.org/IMemberReader/SearchMembersResponse")]
        System.IAsyncResult BeginSearchMembers(string keywords, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndSearchMembers(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMemberReaderChannel : EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembersByCampusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembersByCampusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembersBureauCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembersBureauCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembersBureauByCampusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembersBureauByCampusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembersAlumnisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembersAlumnisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMemberLastInsertedIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMemberLastInsertedIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberReaderClient : System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader {
        
        private BeginOperationDelegate onBeginGetMemberDelegate;
        
        private EndOperationDelegate onEndGetMemberDelegate;
        
        private System.Threading.SendOrPostCallback onGetMemberCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembersDelegate;
        
        private EndOperationDelegate onEndGetMembersDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembersByCampusDelegate;
        
        private EndOperationDelegate onEndGetMembersByCampusDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembersByCampusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembersBureauDelegate;
        
        private EndOperationDelegate onEndGetMembersBureauDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembersBureauCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembersBureauByCampusDelegate;
        
        private EndOperationDelegate onEndGetMembersBureauByCampusDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembersBureauByCampusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembersAlumnisDelegate;
        
        private EndOperationDelegate onEndGetMembersAlumnisDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembersAlumnisCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMemberLastInsertedIdDelegate;
        
        private EndOperationDelegate onEndGetMemberLastInsertedIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetMemberLastInsertedIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchMembersDelegate;
        
        private EndOperationDelegate onEndSearchMembersDelegate;
        
        private System.Threading.SendOrPostCallback onSearchMembersCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MemberReaderClient() : 
                base(MemberReaderClient.GetDefaultBinding(), MemberReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public MemberReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(MemberReaderClient.GetBindingForEndpoint(endpointConfiguration), MemberReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public MemberReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MemberReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public MemberReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MemberReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public MemberReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetMemberCompletedEventArgs> GetMemberCompleted;
        
        public event System.EventHandler<GetMembersCompletedEventArgs> GetMembersCompleted;
        
        public event System.EventHandler<GetMembersByCampusCompletedEventArgs> GetMembersByCampusCompleted;
        
        public event System.EventHandler<GetMembersBureauCompletedEventArgs> GetMembersBureauCompleted;
        
        public event System.EventHandler<GetMembersBureauByCampusCompletedEventArgs> GetMembersBureauByCampusCompleted;
        
        public event System.EventHandler<GetMembersAlumnisCompletedEventArgs> GetMembersAlumnisCompleted;
        
        public event System.EventHandler<GetMemberLastInsertedIdCompletedEventArgs> GetMemberLastInsertedIdCompleted;
        
        public event System.EventHandler<SearchMembersCompletedEventArgs> SearchMembersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.BeginGetMember(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMember(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.EndGetMember(System.IAsyncResult result) {
            return base.Channel.EndGetMember(result);
        }
        
        private System.IAsyncResult OnBeginGetMember(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).BeginGetMember(code, callback, asyncState);
        }
        
        private object[] OnEndGetMember(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Member retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).EndGetMember(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMemberCompleted(object state) {
            if ((this.GetMemberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMemberCompleted(this, new GetMemberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMemberAsync(int code) {
            this.GetMemberAsync(code, null);
        }
        
        public void GetMemberAsync(int code, object userState) {
            if ((this.onBeginGetMemberDelegate == null)) {
                this.onBeginGetMemberDelegate = new BeginOperationDelegate(this.OnBeginGetMember);
            }
            if ((this.onEndGetMemberDelegate == null)) {
                this.onEndGetMemberDelegate = new EndOperationDelegate(this.OnEndGetMember);
            }
            if ((this.onGetMemberCompletedDelegate == null)) {
                this.onGetMemberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMemberCompleted);
            }
            base.InvokeAsync(this.onBeginGetMemberDelegate, new object[] {
                        code}, this.onEndGetMemberDelegate, this.onGetMemberCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.BeginGetMembers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.EndGetMembers(System.IAsyncResult result) {
            return base.Channel.EndGetMembers(result);
        }
        
        private System.IAsyncResult OnBeginGetMembers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).BeginGetMembers(callback, asyncState);
        }
        
        private object[] OnEndGetMembers(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).EndGetMembers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembersCompleted(object state) {
            if ((this.GetMembersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembersCompleted(this, new GetMembersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembersAsync() {
            this.GetMembersAsync(null);
        }
        
        public void GetMembersAsync(object userState) {
            if ((this.onBeginGetMembersDelegate == null)) {
                this.onBeginGetMembersDelegate = new BeginOperationDelegate(this.OnBeginGetMembers);
            }
            if ((this.onEndGetMembersDelegate == null)) {
                this.onEndGetMembersDelegate = new EndOperationDelegate(this.OnEndGetMembers);
            }
            if ((this.onGetMembersCompletedDelegate == null)) {
                this.onGetMembersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembersCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembersDelegate, null, this.onEndGetMembersDelegate, this.onGetMembersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.BeginGetMembersByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembersByCampus(campus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.EndGetMembersByCampus(System.IAsyncResult result) {
            return base.Channel.EndGetMembersByCampus(result);
        }
        
        private System.IAsyncResult OnBeginGetMembersByCampus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).BeginGetMembersByCampus(campus, callback, asyncState);
        }
        
        private object[] OnEndGetMembersByCampus(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).EndGetMembersByCampus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembersByCampusCompleted(object state) {
            if ((this.GetMembersByCampusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembersByCampusCompleted(this, new GetMembersByCampusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembersByCampusAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus) {
            this.GetMembersByCampusAsync(campus, null);
        }
        
        public void GetMembersByCampusAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, object userState) {
            if ((this.onBeginGetMembersByCampusDelegate == null)) {
                this.onBeginGetMembersByCampusDelegate = new BeginOperationDelegate(this.OnBeginGetMembersByCampus);
            }
            if ((this.onEndGetMembersByCampusDelegate == null)) {
                this.onEndGetMembersByCampusDelegate = new EndOperationDelegate(this.OnEndGetMembersByCampus);
            }
            if ((this.onGetMembersByCampusCompletedDelegate == null)) {
                this.onGetMembersByCampusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembersByCampusCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembersByCampusDelegate, new object[] {
                        campus}, this.onEndGetMembersByCampusDelegate, this.onGetMembersByCampusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.BeginGetMembersBureau(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembersBureau(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.EndGetMembersBureau(System.IAsyncResult result) {
            return base.Channel.EndGetMembersBureau(result);
        }
        
        private System.IAsyncResult OnBeginGetMembersBureau(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).BeginGetMembersBureau(callback, asyncState);
        }
        
        private object[] OnEndGetMembersBureau(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).EndGetMembersBureau(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembersBureauCompleted(object state) {
            if ((this.GetMembersBureauCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembersBureauCompleted(this, new GetMembersBureauCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembersBureauAsync() {
            this.GetMembersBureauAsync(null);
        }
        
        public void GetMembersBureauAsync(object userState) {
            if ((this.onBeginGetMembersBureauDelegate == null)) {
                this.onBeginGetMembersBureauDelegate = new BeginOperationDelegate(this.OnBeginGetMembersBureau);
            }
            if ((this.onEndGetMembersBureauDelegate == null)) {
                this.onEndGetMembersBureauDelegate = new EndOperationDelegate(this.OnEndGetMembersBureau);
            }
            if ((this.onGetMembersBureauCompletedDelegate == null)) {
                this.onGetMembersBureauCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembersBureauCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembersBureauDelegate, null, this.onEndGetMembersBureauDelegate, this.onGetMembersBureauCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.BeginGetMembersBureauByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembersBureauByCampus(campus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.EndGetMembersBureauByCampus(System.IAsyncResult result) {
            return base.Channel.EndGetMembersBureauByCampus(result);
        }
        
        private System.IAsyncResult OnBeginGetMembersBureauByCampus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).BeginGetMembersBureauByCampus(campus, callback, asyncState);
        }
        
        private object[] OnEndGetMembersBureauByCampus(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).EndGetMembersBureauByCampus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembersBureauByCampusCompleted(object state) {
            if ((this.GetMembersBureauByCampusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembersBureauByCampusCompleted(this, new GetMembersBureauByCampusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembersBureauByCampusAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus) {
            this.GetMembersBureauByCampusAsync(campus, null);
        }
        
        public void GetMembersBureauByCampusAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, object userState) {
            if ((this.onBeginGetMembersBureauByCampusDelegate == null)) {
                this.onBeginGetMembersBureauByCampusDelegate = new BeginOperationDelegate(this.OnBeginGetMembersBureauByCampus);
            }
            if ((this.onEndGetMembersBureauByCampusDelegate == null)) {
                this.onEndGetMembersBureauByCampusDelegate = new EndOperationDelegate(this.OnEndGetMembersBureauByCampus);
            }
            if ((this.onGetMembersBureauByCampusCompletedDelegate == null)) {
                this.onGetMembersBureauByCampusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembersBureauByCampusCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembersBureauByCampusDelegate, new object[] {
                        campus}, this.onEndGetMembersBureauByCampusDelegate, this.onGetMembersBureauByCampusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.BeginGetMembersAlumnis(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembersAlumnis(campus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.EndGetMembersAlumnis(System.IAsyncResult result) {
            return base.Channel.EndGetMembersAlumnis(result);
        }
        
        private System.IAsyncResult OnBeginGetMembersAlumnis(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).BeginGetMembersAlumnis(campus, callback, asyncState);
        }
        
        private object[] OnEndGetMembersAlumnis(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).EndGetMembersAlumnis(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembersAlumnisCompleted(object state) {
            if ((this.GetMembersAlumnisCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembersAlumnisCompleted(this, new GetMembersAlumnisCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembersAlumnisAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus) {
            this.GetMembersAlumnisAsync(campus, null);
        }
        
        public void GetMembersAlumnisAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, object userState) {
            if ((this.onBeginGetMembersAlumnisDelegate == null)) {
                this.onBeginGetMembersAlumnisDelegate = new BeginOperationDelegate(this.OnBeginGetMembersAlumnis);
            }
            if ((this.onEndGetMembersAlumnisDelegate == null)) {
                this.onEndGetMembersAlumnisDelegate = new EndOperationDelegate(this.OnEndGetMembersAlumnis);
            }
            if ((this.onGetMembersAlumnisCompletedDelegate == null)) {
                this.onGetMembersAlumnisCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembersAlumnisCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembersAlumnisDelegate, new object[] {
                        campus}, this.onEndGetMembersAlumnisDelegate, this.onGetMembersAlumnisCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.BeginGetMemberLastInsertedId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMemberLastInsertedId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.EndGetMemberLastInsertedId(System.IAsyncResult result) {
            return base.Channel.EndGetMemberLastInsertedId(result);
        }
        
        private System.IAsyncResult OnBeginGetMemberLastInsertedId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).BeginGetMemberLastInsertedId(callback, asyncState);
        }
        
        private object[] OnEndGetMemberLastInsertedId(System.IAsyncResult result) {
            int retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).EndGetMemberLastInsertedId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMemberLastInsertedIdCompleted(object state) {
            if ((this.GetMemberLastInsertedIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMemberLastInsertedIdCompleted(this, new GetMemberLastInsertedIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMemberLastInsertedIdAsync() {
            this.GetMemberLastInsertedIdAsync(null);
        }
        
        public void GetMemberLastInsertedIdAsync(object userState) {
            if ((this.onBeginGetMemberLastInsertedIdDelegate == null)) {
                this.onBeginGetMemberLastInsertedIdDelegate = new BeginOperationDelegate(this.OnBeginGetMemberLastInsertedId);
            }
            if ((this.onEndGetMemberLastInsertedIdDelegate == null)) {
                this.onEndGetMemberLastInsertedIdDelegate = new EndOperationDelegate(this.OnEndGetMemberLastInsertedId);
            }
            if ((this.onGetMemberLastInsertedIdCompletedDelegate == null)) {
                this.onGetMemberLastInsertedIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMemberLastInsertedIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetMemberLastInsertedIdDelegate, null, this.onEndGetMemberLastInsertedIdDelegate, this.onGetMemberLastInsertedIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.BeginSearchMembers(string keywords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchMembers(keywords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader.EndSearchMembers(System.IAsyncResult result) {
            return base.Channel.EndSearchMembers(result);
        }
        
        private System.IAsyncResult OnBeginSearchMembers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keywords = ((string)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).BeginSearchMembers(keywords, callback, asyncState);
        }
        
        private object[] OnEndSearchMembers(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader)(this)).EndSearchMembers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchMembersCompleted(object state) {
            if ((this.SearchMembersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchMembersCompleted(this, new SearchMembersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchMembersAsync(string keywords) {
            this.SearchMembersAsync(keywords, null);
        }
        
        public void SearchMembersAsync(string keywords, object userState) {
            if ((this.onBeginSearchMembersDelegate == null)) {
                this.onBeginSearchMembersDelegate = new BeginOperationDelegate(this.OnBeginSearchMembers);
            }
            if ((this.onEndSearchMembersDelegate == null)) {
                this.onEndSearchMembersDelegate = new EndOperationDelegate(this.OnEndSearchMembers);
            }
            if ((this.onSearchMembersCompletedDelegate == null)) {
                this.onSearchMembersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchMembersCompleted);
            }
            base.InvokeAsync(this.onBeginSearchMembersDelegate, new object[] {
                        keywords}, this.onEndSearchMembersDelegate, this.onSearchMembersCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader CreateChannel() {
            return new MemberReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMemberReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMemberReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return MemberReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMemberReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return MemberReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMemberReader);
        }
        
        private class MemberReaderClientChannel : ChannelBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader {
            
            public MemberReaderClientChannel(System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IMemberReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetMember(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetMember", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member EndGetMember(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Member _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member)(base.EndInvoke("GetMember", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMembers", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndGetMembers(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(base.EndInvoke("GetMembers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembersByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = campus;
                System.IAsyncResult _result = base.BeginInvoke("GetMembersByCampus", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndGetMembersByCampus(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(base.EndInvoke("GetMembersByCampus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembersBureau(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMembersBureau", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndGetMembersBureau(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(base.EndInvoke("GetMembersBureau", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembersBureauByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = campus;
                System.IAsyncResult _result = base.BeginInvoke("GetMembersBureauByCampus", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndGetMembersBureauByCampus(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(base.EndInvoke("GetMembersBureauByCampus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembersAlumnis(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = campus;
                System.IAsyncResult _result = base.BeginInvoke("GetMembersAlumnis", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndGetMembersAlumnis(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(base.EndInvoke("GetMembersAlumnis", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMemberLastInsertedId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMemberLastInsertedId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetMemberLastInsertedId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetMemberLastInsertedId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchMembers(string keywords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = keywords;
                System.IAsyncResult _result = base.BeginInvoke("SearchMembers", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] EndSearchMembers(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Member[])(base.EndInvoke("SearchMembers", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IMemberReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadersService.INewsReader")]
    public interface INewsReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/GetNews", ReplyAction="http://tempuri.org/INewsReader/GetNewsResponse")]
        System.IAsyncResult BeginGetNews(int code, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.News EndGetNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/GetListNews", ReplyAction="http://tempuri.org/INewsReader/GetListNewsResponse")]
        System.IAsyncResult BeginGetListNews(System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] EndGetListNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/GetListNewsLimited", ReplyAction="http://tempuri.org/INewsReader/GetListNewsLimitedResponse")]
        System.IAsyncResult BeginGetListNewsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] EndGetListNewsLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/GetNewsLastInsertedId", ReplyAction="http://tempuri.org/INewsReader/GetNewsLastInsertedIdResponse")]
        System.IAsyncResult BeginGetNewsLastInsertedId(System.AsyncCallback callback, object asyncState);
        
        int EndGetNewsLastInsertedId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/SearchNews", ReplyAction="http://tempuri.org/INewsReader/SearchNewsResponse")]
        System.IAsyncResult BeginSearchNews(string keywords, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] EndSearchNews(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsReaderChannel : EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.News Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.News)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.News[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListNewsLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListNewsLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.News[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsLastInsertedIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsLastInsertedIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.News[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsReaderClient : System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader {
        
        private BeginOperationDelegate onBeginGetNewsDelegate;
        
        private EndOperationDelegate onEndGetNewsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListNewsDelegate;
        
        private EndOperationDelegate onEndGetListNewsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListNewsLimitedDelegate;
        
        private EndOperationDelegate onEndGetListNewsLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetListNewsLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsLastInsertedIdDelegate;
        
        private EndOperationDelegate onEndGetNewsLastInsertedIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsLastInsertedIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchNewsDelegate;
        
        private EndOperationDelegate onEndSearchNewsDelegate;
        
        private System.Threading.SendOrPostCallback onSearchNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public NewsReaderClient() : 
                base(NewsReaderClient.GetDefaultBinding(), NewsReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public NewsReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(NewsReaderClient.GetBindingForEndpoint(endpointConfiguration), NewsReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public NewsReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NewsReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public NewsReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NewsReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public NewsReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetNewsCompletedEventArgs> GetNewsCompleted;
        
        public event System.EventHandler<GetListNewsCompletedEventArgs> GetListNewsCompleted;
        
        public event System.EventHandler<GetListNewsLimitedCompletedEventArgs> GetListNewsLimitedCompleted;
        
        public event System.EventHandler<GetNewsLastInsertedIdCompletedEventArgs> GetNewsLastInsertedIdCompleted;
        
        public event System.EventHandler<SearchNewsCompletedEventArgs> SearchNewsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader.BeginGetNews(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNews(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.News EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader.EndGetNews(System.IAsyncResult result) {
            return base.Channel.EndGetNews(result);
        }
        
        private System.IAsyncResult OnBeginGetNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader)(this)).BeginGetNews(code, callback, asyncState);
        }
        
        private object[] OnEndGetNews(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.News retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader)(this)).EndGetNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsCompleted(object state) {
            if ((this.GetNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsCompleted(this, new GetNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsAsync(int code) {
            this.GetNewsAsync(code, null);
        }
        
        public void GetNewsAsync(int code, object userState) {
            if ((this.onBeginGetNewsDelegate == null)) {
                this.onBeginGetNewsDelegate = new BeginOperationDelegate(this.OnBeginGetNews);
            }
            if ((this.onEndGetNewsDelegate == null)) {
                this.onEndGetNewsDelegate = new EndOperationDelegate(this.OnEndGetNews);
            }
            if ((this.onGetNewsCompletedDelegate == null)) {
                this.onGetNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsDelegate, new object[] {
                        code}, this.onEndGetNewsDelegate, this.onGetNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader.BeginGetListNews(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListNews(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader.EndGetListNews(System.IAsyncResult result) {
            return base.Channel.EndGetListNews(result);
        }
        
        private System.IAsyncResult OnBeginGetListNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader)(this)).BeginGetListNews(callback, asyncState);
        }
        
        private object[] OnEndGetListNews(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader)(this)).EndGetListNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListNewsCompleted(object state) {
            if ((this.GetListNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListNewsCompleted(this, new GetListNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListNewsAsync() {
            this.GetListNewsAsync(null);
        }
        
        public void GetListNewsAsync(object userState) {
            if ((this.onBeginGetListNewsDelegate == null)) {
                this.onBeginGetListNewsDelegate = new BeginOperationDelegate(this.OnBeginGetListNews);
            }
            if ((this.onEndGetListNewsDelegate == null)) {
                this.onEndGetListNewsDelegate = new EndOperationDelegate(this.OnEndGetListNews);
            }
            if ((this.onGetListNewsCompletedDelegate == null)) {
                this.onGetListNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListNewsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListNewsDelegate, null, this.onEndGetListNewsDelegate, this.onGetListNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader.BeginGetListNewsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListNewsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader.EndGetListNewsLimited(System.IAsyncResult result) {
            return base.Channel.EndGetListNewsLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetListNewsLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader)(this)).BeginGetListNewsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetListNewsLimited(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader)(this)).EndGetListNewsLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListNewsLimitedCompleted(object state) {
            if ((this.GetListNewsLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListNewsLimitedCompleted(this, new GetListNewsLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListNewsLimitedAsync(int indexFirstElement, int numberOfResults) {
            this.GetListNewsLimitedAsync(indexFirstElement, numberOfResults, null);
        }
        
        public void GetListNewsLimitedAsync(int indexFirstElement, int numberOfResults, object userState) {
            if ((this.onBeginGetListNewsLimitedDelegate == null)) {
                this.onBeginGetListNewsLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetListNewsLimited);
            }
            if ((this.onEndGetListNewsLimitedDelegate == null)) {
                this.onEndGetListNewsLimitedDelegate = new EndOperationDelegate(this.OnEndGetListNewsLimited);
            }
            if ((this.onGetListNewsLimitedCompletedDelegate == null)) {
                this.onGetListNewsLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListNewsLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetListNewsLimitedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults}, this.onEndGetListNewsLimitedDelegate, this.onGetListNewsLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader.BeginGetNewsLastInsertedId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsLastInsertedId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader.EndGetNewsLastInsertedId(System.IAsyncResult result) {
            return base.Channel.EndGetNewsLastInsertedId(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsLastInsertedId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader)(this)).BeginGetNewsLastInsertedId(callback, asyncState);
        }
        
        private object[] OnEndGetNewsLastInsertedId(System.IAsyncResult result) {
            int retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader)(this)).EndGetNewsLastInsertedId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsLastInsertedIdCompleted(object state) {
            if ((this.GetNewsLastInsertedIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsLastInsertedIdCompleted(this, new GetNewsLastInsertedIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsLastInsertedIdAsync() {
            this.GetNewsLastInsertedIdAsync(null);
        }
        
        public void GetNewsLastInsertedIdAsync(object userState) {
            if ((this.onBeginGetNewsLastInsertedIdDelegate == null)) {
                this.onBeginGetNewsLastInsertedIdDelegate = new BeginOperationDelegate(this.OnBeginGetNewsLastInsertedId);
            }
            if ((this.onEndGetNewsLastInsertedIdDelegate == null)) {
                this.onEndGetNewsLastInsertedIdDelegate = new EndOperationDelegate(this.OnEndGetNewsLastInsertedId);
            }
            if ((this.onGetNewsLastInsertedIdCompletedDelegate == null)) {
                this.onGetNewsLastInsertedIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsLastInsertedIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsLastInsertedIdDelegate, null, this.onEndGetNewsLastInsertedIdDelegate, this.onGetNewsLastInsertedIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader.BeginSearchNews(string keywords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchNews(keywords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader.EndSearchNews(System.IAsyncResult result) {
            return base.Channel.EndSearchNews(result);
        }
        
        private System.IAsyncResult OnBeginSearchNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keywords = ((string)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader)(this)).BeginSearchNews(keywords, callback, asyncState);
        }
        
        private object[] OnEndSearchNews(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader)(this)).EndSearchNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchNewsCompleted(object state) {
            if ((this.SearchNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchNewsCompleted(this, new SearchNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchNewsAsync(string keywords) {
            this.SearchNewsAsync(keywords, null);
        }
        
        public void SearchNewsAsync(string keywords, object userState) {
            if ((this.onBeginSearchNewsDelegate == null)) {
                this.onBeginSearchNewsDelegate = new BeginOperationDelegate(this.OnBeginSearchNews);
            }
            if ((this.onEndSearchNewsDelegate == null)) {
                this.onEndSearchNewsDelegate = new EndOperationDelegate(this.OnEndSearchNews);
            }
            if ((this.onSearchNewsCompletedDelegate == null)) {
                this.onSearchNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchNewsCompleted);
            }
            base.InvokeAsync(this.onBeginSearchNewsDelegate, new object[] {
                        keywords}, this.onEndSearchNewsDelegate, this.onSearchNewsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader CreateChannel() {
            return new NewsReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INewsReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INewsReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return NewsReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_INewsReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return NewsReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_INewsReader);
        }
        
        private class NewsReaderClientChannel : ChannelBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader {
            
            public NewsReaderClientChannel(System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.INewsReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetNews(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetNews", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.News EndGetNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.News _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.News)(base.EndInvoke("GetNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetListNews(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetListNews", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] EndGetListNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.News[])(base.EndInvoke("GetListNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetListNewsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetListNewsLimited", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] EndGetListNewsLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.News[])(base.EndInvoke("GetListNewsLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsLastInsertedId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNewsLastInsertedId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetNewsLastInsertedId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetNewsLastInsertedId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchNews(string keywords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = keywords;
                System.IAsyncResult _result = base.BeginInvoke("SearchNews", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] EndSearchNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.News[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.News[])(base.EndInvoke("SearchNews", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_INewsReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadersService.IProjectReader")]
    public interface IProjectReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjectReader/GetProject", ReplyAction="http://tempuri.org/IProjectReader/GetProjectResponse")]
        System.IAsyncResult BeginGetProject(int code, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Project EndGetProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjectReader/GetProjects", ReplyAction="http://tempuri.org/IProjectReader/GetProjectsResponse")]
        System.IAsyncResult BeginGetProjects(System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EndGetProjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjectReader/GetProjectsLimited", ReplyAction="http://tempuri.org/IProjectReader/GetProjectsLimitedResponse")]
        System.IAsyncResult BeginGetProjectsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EndGetProjectsLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjectReader/GetProjectsByCampus", ReplyAction="http://tempuri.org/IProjectReader/GetProjectsByCampusResponse")]
        System.IAsyncResult BeginGetProjectsByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EndGetProjectsByCampus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjectReader/GetProjectsByCampusLimited", ReplyAction="http://tempuri.org/IProjectReader/GetProjectsByCampusLimitedResponse")]
        System.IAsyncResult BeginGetProjectsByCampusLimited(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EndGetProjectsByCampusLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjectReader/GetProjectLastInsertedId", ReplyAction="http://tempuri.org/IProjectReader/GetProjectLastInsertedIdResponse")]
        System.IAsyncResult BeginGetProjectLastInsertedId(System.AsyncCallback callback, object asyncState);
        
        int EndGetProjectLastInsertedId(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectReaderChannel : EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Project Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Project)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectsLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectsLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectsByCampusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectsByCampusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectsByCampusLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectsByCampusLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectLastInsertedIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectLastInsertedIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectReaderClient : System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader {
        
        private BeginOperationDelegate onBeginGetProjectDelegate;
        
        private EndOperationDelegate onEndGetProjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjectsDelegate;
        
        private EndOperationDelegate onEndGetProjectsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjectsLimitedDelegate;
        
        private EndOperationDelegate onEndGetProjectsLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectsLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjectsByCampusDelegate;
        
        private EndOperationDelegate onEndGetProjectsByCampusDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectsByCampusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjectsByCampusLimitedDelegate;
        
        private EndOperationDelegate onEndGetProjectsByCampusLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectsByCampusLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjectLastInsertedIdDelegate;
        
        private EndOperationDelegate onEndGetProjectLastInsertedIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectLastInsertedIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ProjectReaderClient() : 
                base(ProjectReaderClient.GetDefaultBinding(), ProjectReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public ProjectReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(ProjectReaderClient.GetBindingForEndpoint(endpointConfiguration), ProjectReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public ProjectReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ProjectReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public ProjectReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ProjectReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public ProjectReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetProjectCompletedEventArgs> GetProjectCompleted;
        
        public event System.EventHandler<GetProjectsCompletedEventArgs> GetProjectsCompleted;
        
        public event System.EventHandler<GetProjectsLimitedCompletedEventArgs> GetProjectsLimitedCompleted;
        
        public event System.EventHandler<GetProjectsByCampusCompletedEventArgs> GetProjectsByCampusCompleted;
        
        public event System.EventHandler<GetProjectsByCampusLimitedCompletedEventArgs> GetProjectsByCampusLimitedCompleted;
        
        public event System.EventHandler<GetProjectLastInsertedIdCompletedEventArgs> GetProjectLastInsertedIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.BeginGetProject(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProject(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Project EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.EndGetProject(System.IAsyncResult result) {
            return base.Channel.EndGetProject(result);
        }
        
        private System.IAsyncResult OnBeginGetProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).BeginGetProject(code, callback, asyncState);
        }
        
        private object[] OnEndGetProject(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Project retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).EndGetProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectCompleted(object state) {
            if ((this.GetProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectCompleted(this, new GetProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectAsync(int code) {
            this.GetProjectAsync(code, null);
        }
        
        public void GetProjectAsync(int code, object userState) {
            if ((this.onBeginGetProjectDelegate == null)) {
                this.onBeginGetProjectDelegate = new BeginOperationDelegate(this.OnBeginGetProject);
            }
            if ((this.onEndGetProjectDelegate == null)) {
                this.onEndGetProjectDelegate = new EndOperationDelegate(this.OnEndGetProject);
            }
            if ((this.onGetProjectCompletedDelegate == null)) {
                this.onGetProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectDelegate, new object[] {
                        code}, this.onEndGetProjectDelegate, this.onGetProjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.BeginGetProjects(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjects(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.EndGetProjects(System.IAsyncResult result) {
            return base.Channel.EndGetProjects(result);
        }
        
        private System.IAsyncResult OnBeginGetProjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).BeginGetProjects(callback, asyncState);
        }
        
        private object[] OnEndGetProjects(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).EndGetProjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectsCompleted(object state) {
            if ((this.GetProjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectsCompleted(this, new GetProjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectsAsync() {
            this.GetProjectsAsync(null);
        }
        
        public void GetProjectsAsync(object userState) {
            if ((this.onBeginGetProjectsDelegate == null)) {
                this.onBeginGetProjectsDelegate = new BeginOperationDelegate(this.OnBeginGetProjects);
            }
            if ((this.onEndGetProjectsDelegate == null)) {
                this.onEndGetProjectsDelegate = new EndOperationDelegate(this.OnEndGetProjects);
            }
            if ((this.onGetProjectsCompletedDelegate == null)) {
                this.onGetProjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectsDelegate, null, this.onEndGetProjectsDelegate, this.onGetProjectsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.BeginGetProjectsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjectsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.EndGetProjectsLimited(System.IAsyncResult result) {
            return base.Channel.EndGetProjectsLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetProjectsLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).BeginGetProjectsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetProjectsLimited(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).EndGetProjectsLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectsLimitedCompleted(object state) {
            if ((this.GetProjectsLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectsLimitedCompleted(this, new GetProjectsLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectsLimitedAsync(int indexFirstElement, int numberOfResults) {
            this.GetProjectsLimitedAsync(indexFirstElement, numberOfResults, null);
        }
        
        public void GetProjectsLimitedAsync(int indexFirstElement, int numberOfResults, object userState) {
            if ((this.onBeginGetProjectsLimitedDelegate == null)) {
                this.onBeginGetProjectsLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetProjectsLimited);
            }
            if ((this.onEndGetProjectsLimitedDelegate == null)) {
                this.onEndGetProjectsLimitedDelegate = new EndOperationDelegate(this.OnEndGetProjectsLimited);
            }
            if ((this.onGetProjectsLimitedCompletedDelegate == null)) {
                this.onGetProjectsLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectsLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectsLimitedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults}, this.onEndGetProjectsLimitedDelegate, this.onGetProjectsLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.BeginGetProjectsByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjectsByCampus(campus, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.EndGetProjectsByCampus(System.IAsyncResult result) {
            return base.Channel.EndGetProjectsByCampus(result);
        }
        
        private System.IAsyncResult OnBeginGetProjectsByCampus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).BeginGetProjectsByCampus(campus, callback, asyncState);
        }
        
        private object[] OnEndGetProjectsByCampus(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).EndGetProjectsByCampus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectsByCampusCompleted(object state) {
            if ((this.GetProjectsByCampusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectsByCampusCompleted(this, new GetProjectsByCampusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectsByCampusAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus) {
            this.GetProjectsByCampusAsync(campus, null);
        }
        
        public void GetProjectsByCampusAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, object userState) {
            if ((this.onBeginGetProjectsByCampusDelegate == null)) {
                this.onBeginGetProjectsByCampusDelegate = new BeginOperationDelegate(this.OnBeginGetProjectsByCampus);
            }
            if ((this.onEndGetProjectsByCampusDelegate == null)) {
                this.onEndGetProjectsByCampusDelegate = new EndOperationDelegate(this.OnEndGetProjectsByCampus);
            }
            if ((this.onGetProjectsByCampusCompletedDelegate == null)) {
                this.onGetProjectsByCampusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectsByCampusCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectsByCampusDelegate, new object[] {
                        campus}, this.onEndGetProjectsByCampusDelegate, this.onGetProjectsByCampusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.BeginGetProjectsByCampusLimited(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjectsByCampusLimited(campus, indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.EndGetProjectsByCampusLimited(System.IAsyncResult result) {
            return base.Channel.EndGetProjectsByCampusLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetProjectsByCampusLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus)(inValues[0]));
            int indexFirstElement = ((int)(inValues[1]));
            int numberOfResults = ((int)(inValues[2]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).BeginGetProjectsByCampusLimited(campus, indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetProjectsByCampusLimited(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).EndGetProjectsByCampusLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectsByCampusLimitedCompleted(object state) {
            if ((this.GetProjectsByCampusLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectsByCampusLimitedCompleted(this, new GetProjectsByCampusLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectsByCampusLimitedAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, int indexFirstElement, int numberOfResults) {
            this.GetProjectsByCampusLimitedAsync(campus, indexFirstElement, numberOfResults, null);
        }
        
        public void GetProjectsByCampusLimitedAsync(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, int indexFirstElement, int numberOfResults, object userState) {
            if ((this.onBeginGetProjectsByCampusLimitedDelegate == null)) {
                this.onBeginGetProjectsByCampusLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetProjectsByCampusLimited);
            }
            if ((this.onEndGetProjectsByCampusLimitedDelegate == null)) {
                this.onEndGetProjectsByCampusLimitedDelegate = new EndOperationDelegate(this.OnEndGetProjectsByCampusLimited);
            }
            if ((this.onGetProjectsByCampusLimitedCompletedDelegate == null)) {
                this.onGetProjectsByCampusLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectsByCampusLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectsByCampusLimitedDelegate, new object[] {
                        campus,
                        indexFirstElement,
                        numberOfResults}, this.onEndGetProjectsByCampusLimitedDelegate, this.onGetProjectsByCampusLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.BeginGetProjectLastInsertedId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjectLastInsertedId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader.EndGetProjectLastInsertedId(System.IAsyncResult result) {
            return base.Channel.EndGetProjectLastInsertedId(result);
        }
        
        private System.IAsyncResult OnBeginGetProjectLastInsertedId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).BeginGetProjectLastInsertedId(callback, asyncState);
        }
        
        private object[] OnEndGetProjectLastInsertedId(System.IAsyncResult result) {
            int retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader)(this)).EndGetProjectLastInsertedId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectLastInsertedIdCompleted(object state) {
            if ((this.GetProjectLastInsertedIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectLastInsertedIdCompleted(this, new GetProjectLastInsertedIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectLastInsertedIdAsync() {
            this.GetProjectLastInsertedIdAsync(null);
        }
        
        public void GetProjectLastInsertedIdAsync(object userState) {
            if ((this.onBeginGetProjectLastInsertedIdDelegate == null)) {
                this.onBeginGetProjectLastInsertedIdDelegate = new BeginOperationDelegate(this.OnBeginGetProjectLastInsertedId);
            }
            if ((this.onEndGetProjectLastInsertedIdDelegate == null)) {
                this.onEndGetProjectLastInsertedIdDelegate = new EndOperationDelegate(this.OnEndGetProjectLastInsertedId);
            }
            if ((this.onGetProjectLastInsertedIdCompletedDelegate == null)) {
                this.onGetProjectLastInsertedIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectLastInsertedIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectLastInsertedIdDelegate, null, this.onEndGetProjectLastInsertedIdDelegate, this.onGetProjectLastInsertedIdCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader CreateChannel() {
            return new ProjectReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IProjectReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IProjectReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ProjectReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IProjectReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ProjectReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IProjectReader);
        }
        
        private class ProjectReaderClientChannel : ChannelBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader {
            
            public ProjectReaderClientChannel(System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IProjectReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetProject(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetProject", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Project EndGetProject(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Project _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Project)(base.EndInvoke("GetProject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjects(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetProjects", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EndGetProjects(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[])(base.EndInvoke("GetProjects", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjectsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetProjectsLimited", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EndGetProjectsLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[])(base.EndInvoke("GetProjectsLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjectsByCampus(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = campus;
                System.IAsyncResult _result = base.BeginInvoke("GetProjectsByCampus", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EndGetProjectsByCampus(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[])(base.EndInvoke("GetProjectsByCampus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjectsByCampusLimited(EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus campus, int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = campus;
                _args[1] = indexFirstElement;
                _args[2] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetProjectsByCampusLimited", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] EndGetProjectsByCampusLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Project[])(base.EndInvoke("GetProjectsByCampusLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjectLastInsertedId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetProjectLastInsertedId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetProjectLastInsertedId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetProjectLastInsertedId", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IProjectReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadersService.ISlideReader")]
    public interface ISlideReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISlideReader/GetSlide", ReplyAction="http://tempuri.org/ISlideReader/GetSlideResponse")]
        System.IAsyncResult BeginGetSlide(int code, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide EndGetSlide(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISlideReader/GetSlides", ReplyAction="http://tempuri.org/ISlideReader/GetSlidesResponse")]
        System.IAsyncResult BeginGetSlides(System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide[] EndGetSlides(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISlideReaderChannel : EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlideCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlideCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSlidesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSlidesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SlideReaderClient : System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader {
        
        private BeginOperationDelegate onBeginGetSlideDelegate;
        
        private EndOperationDelegate onEndGetSlideDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlideCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSlidesDelegate;
        
        private EndOperationDelegate onEndGetSlidesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSlidesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SlideReaderClient() : 
                base(SlideReaderClient.GetDefaultBinding(), SlideReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public SlideReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(SlideReaderClient.GetBindingForEndpoint(endpointConfiguration), SlideReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public SlideReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SlideReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public SlideReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SlideReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public SlideReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetSlideCompletedEventArgs> GetSlideCompleted;
        
        public event System.EventHandler<GetSlidesCompletedEventArgs> GetSlidesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader.BeginGetSlide(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlide(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader.EndGetSlide(System.IAsyncResult result) {
            return base.Channel.EndGetSlide(result);
        }
        
        private System.IAsyncResult OnBeginGetSlide(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader)(this)).BeginGetSlide(code, callback, asyncState);
        }
        
        private object[] OnEndGetSlide(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader)(this)).EndGetSlide(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlideCompleted(object state) {
            if ((this.GetSlideCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlideCompleted(this, new GetSlideCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlideAsync(int code) {
            this.GetSlideAsync(code, null);
        }
        
        public void GetSlideAsync(int code, object userState) {
            if ((this.onBeginGetSlideDelegate == null)) {
                this.onBeginGetSlideDelegate = new BeginOperationDelegate(this.OnBeginGetSlide);
            }
            if ((this.onEndGetSlideDelegate == null)) {
                this.onEndGetSlideDelegate = new EndOperationDelegate(this.OnEndGetSlide);
            }
            if ((this.onGetSlideCompletedDelegate == null)) {
                this.onGetSlideCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlideCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlideDelegate, new object[] {
                        code}, this.onEndGetSlideDelegate, this.onGetSlideCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader.BeginGetSlides(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSlides(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide[] EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader.EndGetSlides(System.IAsyncResult result) {
            return base.Channel.EndGetSlides(result);
        }
        
        private System.IAsyncResult OnBeginGetSlides(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader)(this)).BeginGetSlides(callback, asyncState);
        }
        
        private object[] OnEndGetSlides(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader)(this)).EndGetSlides(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSlidesCompleted(object state) {
            if ((this.GetSlidesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSlidesCompleted(this, new GetSlidesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSlidesAsync() {
            this.GetSlidesAsync(null);
        }
        
        public void GetSlidesAsync(object userState) {
            if ((this.onBeginGetSlidesDelegate == null)) {
                this.onBeginGetSlidesDelegate = new BeginOperationDelegate(this.OnBeginGetSlides);
            }
            if ((this.onEndGetSlidesDelegate == null)) {
                this.onEndGetSlidesDelegate = new EndOperationDelegate(this.OnEndGetSlides);
            }
            if ((this.onGetSlidesCompletedDelegate == null)) {
                this.onGetSlidesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSlidesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSlidesDelegate, null, this.onEndGetSlidesDelegate, this.onGetSlidesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader CreateChannel() {
            return new SlideReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISlideReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISlideReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return SlideReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISlideReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return SlideReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISlideReader);
        }
        
        private class SlideReaderClientChannel : ChannelBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader {
            
            public SlideReaderClientChannel(System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.ISlideReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSlide(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetSlide", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide EndGetSlide(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide)(base.EndInvoke("GetSlide", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSlides(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSlides", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide[] EndGetSlides(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Slide[])(base.EndInvoke("GetSlides", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_ISlideReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadersService.IShowReader")]
    public interface IShowReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShowReader/GetShow", ReplyAction="http://tempuri.org/IShowReader/GetShowResponse")]
        System.IAsyncResult BeginGetShow(int code, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Show EndGetShow(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShowReader/GetShows", ReplyAction="http://tempuri.org/IShowReader/GetShowsResponse")]
        System.IAsyncResult BeginGetShows(System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] EndGetShows(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShowReader/GetShowsLimited", ReplyAction="http://tempuri.org/IShowReader/GetShowsLimitedResponse")]
        System.IAsyncResult BeginGetShowsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] EndGetShowsLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShowReader/GetShowLastInsertedId", ReplyAction="http://tempuri.org/IShowReader/GetShowLastInsertedIdResponse")]
        System.IAsyncResult BeginGetShowLastInsertedId(System.AsyncCallback callback, object asyncState);
        
        int EndGetShowLastInsertedId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShowReader/SearchShows", ReplyAction="http://tempuri.org/IShowReader/SearchShowsResponse")]
        System.IAsyncResult BeginSearchShows(string keywords, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] EndSearchShows(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShowReaderChannel : EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Show Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Show)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShowsLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShowsLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShowLastInsertedIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShowLastInsertedIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchShowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchShowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShowReaderClient : System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader {
        
        private BeginOperationDelegate onBeginGetShowDelegate;
        
        private EndOperationDelegate onEndGetShowDelegate;
        
        private System.Threading.SendOrPostCallback onGetShowCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShowsDelegate;
        
        private EndOperationDelegate onEndGetShowsDelegate;
        
        private System.Threading.SendOrPostCallback onGetShowsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShowsLimitedDelegate;
        
        private EndOperationDelegate onEndGetShowsLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetShowsLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShowLastInsertedIdDelegate;
        
        private EndOperationDelegate onEndGetShowLastInsertedIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetShowLastInsertedIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchShowsDelegate;
        
        private EndOperationDelegate onEndSearchShowsDelegate;
        
        private System.Threading.SendOrPostCallback onSearchShowsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ShowReaderClient() : 
                base(ShowReaderClient.GetDefaultBinding(), ShowReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public ShowReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(ShowReaderClient.GetBindingForEndpoint(endpointConfiguration), ShowReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public ShowReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ShowReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public ShowReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ShowReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public ShowReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetShowCompletedEventArgs> GetShowCompleted;
        
        public event System.EventHandler<GetShowsCompletedEventArgs> GetShowsCompleted;
        
        public event System.EventHandler<GetShowsLimitedCompletedEventArgs> GetShowsLimitedCompleted;
        
        public event System.EventHandler<GetShowLastInsertedIdCompletedEventArgs> GetShowLastInsertedIdCompleted;
        
        public event System.EventHandler<SearchShowsCompletedEventArgs> SearchShowsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader.BeginGetShow(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShow(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Show EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader.EndGetShow(System.IAsyncResult result) {
            return base.Channel.EndGetShow(result);
        }
        
        private System.IAsyncResult OnBeginGetShow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader)(this)).BeginGetShow(code, callback, asyncState);
        }
        
        private object[] OnEndGetShow(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Show retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader)(this)).EndGetShow(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShowCompleted(object state) {
            if ((this.GetShowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShowCompleted(this, new GetShowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShowAsync(int code) {
            this.GetShowAsync(code, null);
        }
        
        public void GetShowAsync(int code, object userState) {
            if ((this.onBeginGetShowDelegate == null)) {
                this.onBeginGetShowDelegate = new BeginOperationDelegate(this.OnBeginGetShow);
            }
            if ((this.onEndGetShowDelegate == null)) {
                this.onEndGetShowDelegate = new EndOperationDelegate(this.OnEndGetShow);
            }
            if ((this.onGetShowCompletedDelegate == null)) {
                this.onGetShowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShowCompleted);
            }
            base.InvokeAsync(this.onBeginGetShowDelegate, new object[] {
                        code}, this.onEndGetShowDelegate, this.onGetShowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader.BeginGetShows(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShows(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader.EndGetShows(System.IAsyncResult result) {
            return base.Channel.EndGetShows(result);
        }
        
        private System.IAsyncResult OnBeginGetShows(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader)(this)).BeginGetShows(callback, asyncState);
        }
        
        private object[] OnEndGetShows(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader)(this)).EndGetShows(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShowsCompleted(object state) {
            if ((this.GetShowsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShowsCompleted(this, new GetShowsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShowsAsync() {
            this.GetShowsAsync(null);
        }
        
        public void GetShowsAsync(object userState) {
            if ((this.onBeginGetShowsDelegate == null)) {
                this.onBeginGetShowsDelegate = new BeginOperationDelegate(this.OnBeginGetShows);
            }
            if ((this.onEndGetShowsDelegate == null)) {
                this.onEndGetShowsDelegate = new EndOperationDelegate(this.OnEndGetShows);
            }
            if ((this.onGetShowsCompletedDelegate == null)) {
                this.onGetShowsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShowsCompleted);
            }
            base.InvokeAsync(this.onBeginGetShowsDelegate, null, this.onEndGetShowsDelegate, this.onGetShowsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader.BeginGetShowsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShowsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader.EndGetShowsLimited(System.IAsyncResult result) {
            return base.Channel.EndGetShowsLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetShowsLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader)(this)).BeginGetShowsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetShowsLimited(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader)(this)).EndGetShowsLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShowsLimitedCompleted(object state) {
            if ((this.GetShowsLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShowsLimitedCompleted(this, new GetShowsLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShowsLimitedAsync(int indexFirstElement, int numberOfResults) {
            this.GetShowsLimitedAsync(indexFirstElement, numberOfResults, null);
        }
        
        public void GetShowsLimitedAsync(int indexFirstElement, int numberOfResults, object userState) {
            if ((this.onBeginGetShowsLimitedDelegate == null)) {
                this.onBeginGetShowsLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetShowsLimited);
            }
            if ((this.onEndGetShowsLimitedDelegate == null)) {
                this.onEndGetShowsLimitedDelegate = new EndOperationDelegate(this.OnEndGetShowsLimited);
            }
            if ((this.onGetShowsLimitedCompletedDelegate == null)) {
                this.onGetShowsLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShowsLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetShowsLimitedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults}, this.onEndGetShowsLimitedDelegate, this.onGetShowsLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader.BeginGetShowLastInsertedId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShowLastInsertedId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader.EndGetShowLastInsertedId(System.IAsyncResult result) {
            return base.Channel.EndGetShowLastInsertedId(result);
        }
        
        private System.IAsyncResult OnBeginGetShowLastInsertedId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader)(this)).BeginGetShowLastInsertedId(callback, asyncState);
        }
        
        private object[] OnEndGetShowLastInsertedId(System.IAsyncResult result) {
            int retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader)(this)).EndGetShowLastInsertedId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShowLastInsertedIdCompleted(object state) {
            if ((this.GetShowLastInsertedIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShowLastInsertedIdCompleted(this, new GetShowLastInsertedIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShowLastInsertedIdAsync() {
            this.GetShowLastInsertedIdAsync(null);
        }
        
        public void GetShowLastInsertedIdAsync(object userState) {
            if ((this.onBeginGetShowLastInsertedIdDelegate == null)) {
                this.onBeginGetShowLastInsertedIdDelegate = new BeginOperationDelegate(this.OnBeginGetShowLastInsertedId);
            }
            if ((this.onEndGetShowLastInsertedIdDelegate == null)) {
                this.onEndGetShowLastInsertedIdDelegate = new EndOperationDelegate(this.OnEndGetShowLastInsertedId);
            }
            if ((this.onGetShowLastInsertedIdCompletedDelegate == null)) {
                this.onGetShowLastInsertedIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShowLastInsertedIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetShowLastInsertedIdDelegate, null, this.onEndGetShowLastInsertedIdDelegate, this.onGetShowLastInsertedIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader.BeginSearchShows(string keywords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchShows(keywords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader.EndSearchShows(System.IAsyncResult result) {
            return base.Channel.EndSearchShows(result);
        }
        
        private System.IAsyncResult OnBeginSearchShows(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keywords = ((string)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader)(this)).BeginSearchShows(keywords, callback, asyncState);
        }
        
        private object[] OnEndSearchShows(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader)(this)).EndSearchShows(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchShowsCompleted(object state) {
            if ((this.SearchShowsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchShowsCompleted(this, new SearchShowsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchShowsAsync(string keywords) {
            this.SearchShowsAsync(keywords, null);
        }
        
        public void SearchShowsAsync(string keywords, object userState) {
            if ((this.onBeginSearchShowsDelegate == null)) {
                this.onBeginSearchShowsDelegate = new BeginOperationDelegate(this.OnBeginSearchShows);
            }
            if ((this.onEndSearchShowsDelegate == null)) {
                this.onEndSearchShowsDelegate = new EndOperationDelegate(this.OnEndSearchShows);
            }
            if ((this.onSearchShowsCompletedDelegate == null)) {
                this.onSearchShowsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchShowsCompleted);
            }
            base.InvokeAsync(this.onBeginSearchShowsDelegate, new object[] {
                        keywords}, this.onEndSearchShowsDelegate, this.onSearchShowsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader CreateChannel() {
            return new ShowReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IShowReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IShowReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ShowReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IShowReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ShowReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IShowReader);
        }
        
        private class ShowReaderClientChannel : ChannelBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader {
            
            public ShowReaderClientChannel(System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.IShowReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetShow(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetShow", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Show EndGetShow(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Show _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Show)(base.EndInvoke("GetShow", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShows(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetShows", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] EndGetShows(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[])(base.EndInvoke("GetShows", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShowsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetShowsLimited", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] EndGetShowsLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[])(base.EndInvoke("GetShowsLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShowLastInsertedId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetShowLastInsertedId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetShowLastInsertedId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetShowLastInsertedId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchShows(string keywords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = keywords;
                System.IAsyncResult _result = base.BeginInvoke("SearchShows", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] EndSearchShows(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Show[])(base.EndInvoke("SearchShows", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IShowReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadersService.ICampusReader")]
    public interface ICampusReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICampusReader/GetCampus", ReplyAction="http://tempuri.org/ICampusReader/GetCampusResponse")]
        System.IAsyncResult BeginGetCampus(int code, System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus EndGetCampus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICampusReader/GetCampuses", ReplyAction="http://tempuri.org/ICampusReader/GetCampusesResponse")]
        System.IAsyncResult BeginGetCampuses(System.AsyncCallback callback, object asyncState);
        
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus[] EndGetCampuses(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICampusReaderChannel : EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCampusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCampusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCampusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCampusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CampusReaderClient : System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader {
        
        private BeginOperationDelegate onBeginGetCampusDelegate;
        
        private EndOperationDelegate onEndGetCampusDelegate;
        
        private System.Threading.SendOrPostCallback onGetCampusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCampusesDelegate;
        
        private EndOperationDelegate onEndGetCampusesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCampusesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CampusReaderClient() : 
                base(CampusReaderClient.GetDefaultBinding(), CampusReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public CampusReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(CampusReaderClient.GetBindingForEndpoint(endpointConfiguration), CampusReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public CampusReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CampusReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public CampusReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CampusReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public CampusReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetCampusCompletedEventArgs> GetCampusCompleted;
        
        public event System.EventHandler<GetCampusesCompletedEventArgs> GetCampusesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader.BeginGetCampus(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCampus(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader.EndGetCampus(System.IAsyncResult result) {
            return base.Channel.EndGetCampus(result);
        }
        
        private System.IAsyncResult OnBeginGetCampus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader)(this)).BeginGetCampus(code, callback, asyncState);
        }
        
        private object[] OnEndGetCampus(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader)(this)).EndGetCampus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCampusCompleted(object state) {
            if ((this.GetCampusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCampusCompleted(this, new GetCampusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCampusAsync(int code) {
            this.GetCampusAsync(code, null);
        }
        
        public void GetCampusAsync(int code, object userState) {
            if ((this.onBeginGetCampusDelegate == null)) {
                this.onBeginGetCampusDelegate = new BeginOperationDelegate(this.OnBeginGetCampus);
            }
            if ((this.onEndGetCampusDelegate == null)) {
                this.onEndGetCampusDelegate = new EndOperationDelegate(this.OnEndGetCampus);
            }
            if ((this.onGetCampusCompletedDelegate == null)) {
                this.onGetCampusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCampusCompleted);
            }
            base.InvokeAsync(this.onBeginGetCampusDelegate, new object[] {
                        code}, this.onEndGetCampusDelegate, this.onGetCampusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader.BeginGetCampuses(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCampuses(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus[] EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader.EndGetCampuses(System.IAsyncResult result) {
            return base.Channel.EndGetCampuses(result);
        }
        
        private System.IAsyncResult OnBeginGetCampuses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader)(this)).BeginGetCampuses(callback, asyncState);
        }
        
        private object[] OnEndGetCampuses(System.IAsyncResult result) {
            EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus[] retVal = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader)(this)).EndGetCampuses(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCampusesCompleted(object state) {
            if ((this.GetCampusesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCampusesCompleted(this, new GetCampusesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCampusesAsync() {
            this.GetCampusesAsync(null);
        }
        
        public void GetCampusesAsync(object userState) {
            if ((this.onBeginGetCampusesDelegate == null)) {
                this.onBeginGetCampusesDelegate = new BeginOperationDelegate(this.OnBeginGetCampuses);
            }
            if ((this.onEndGetCampusesDelegate == null)) {
                this.onEndGetCampusesDelegate = new EndOperationDelegate(this.OnEndGetCampuses);
            }
            if ((this.onGetCampusesCompletedDelegate == null)) {
                this.onGetCampusesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCampusesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCampusesDelegate, null, this.onEndGetCampusesDelegate, this.onGetCampusesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader CreateChannel() {
            return new CampusReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICampusReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICampusReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return CampusReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ICampusReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return CampusReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ICampusReader);
        }
        
        private class CampusReaderClientChannel : ChannelBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader>, EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader {
            
            public CampusReaderClientChannel(System.ServiceModel.ClientBase<EPSILab.SolarSystem.Saturn.Model.ReadersService.ICampusReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetCampus(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetCampus", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus EndGetCampus(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus)(base.EndInvoke("GetCampus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCampuses(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCampuses", _args, callback, asyncState);
                return _result;
            }
            
            public EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus[] EndGetCampuses(System.IAsyncResult result) {
                object[] _args = new object[0];
                EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus[] _result = ((EPSILab.SolarSystem.Saturn.Model.ReadersService.Campus[])(base.EndInvoke("GetCampuses", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_ICampusReader,
        }
    }
}
