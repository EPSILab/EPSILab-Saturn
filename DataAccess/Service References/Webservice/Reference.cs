//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.32559
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SolarSystem.Saturn.DataAccess.Webservice {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Classe", Namespace="http://schemas.datacontract.org/2004/07/SolarSystem.Earth.Common")]
    public partial class Classe : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Annee_Promo_SortanteField;
        
        private int Code_ClasseField;
        
        private bool Encore_PresenteField;
        
        private string LibelleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Annee_Promo_Sortante {
            get {
                return this.Annee_Promo_SortanteField;
            }
            set {
                if ((this.Annee_Promo_SortanteField.Equals(value) != true)) {
                    this.Annee_Promo_SortanteField = value;
                    this.RaisePropertyChanged("Annee_Promo_Sortante");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code_Classe {
            get {
                return this.Code_ClasseField;
            }
            set {
                if ((this.Code_ClasseField.Equals(value) != true)) {
                    this.Code_ClasseField = value;
                    this.RaisePropertyChanged("Code_Classe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Encore_Presente {
            get {
                return this.Encore_PresenteField;
            }
            set {
                if ((this.Encore_PresenteField.Equals(value) != true)) {
                    this.Encore_PresenteField = value;
                    this.RaisePropertyChanged("Encore_Presente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Libelle {
            get {
                return this.LibelleField;
            }
            set {
                if ((object.ReferenceEquals(this.LibelleField, value) != true)) {
                    this.LibelleField = value;
                    this.RaisePropertyChanged("Libelle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Conference", Namespace="http://schemas.datacontract.org/2004/07/SolarSystem.Earth.Common")]
    public partial class Conference : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Code_ConferenceField;
        
        private System.DateTime Date_Heure_DebutField;
        
        private System.DateTime Date_Heure_FinField;
        
        private string DescriptionField;
        
        private string ImageField;
        
        private string LieuField;
        
        private string NomField;
        
        private bool PublieeField;
        
        private string URLField;
        
        private SolarSystem.Saturn.DataAccess.Webservice.Ville VilleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code_Conference {
            get {
                return this.Code_ConferenceField;
            }
            set {
                if ((this.Code_ConferenceField.Equals(value) != true)) {
                    this.Code_ConferenceField = value;
                    this.RaisePropertyChanged("Code_Conference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Heure_Debut {
            get {
                return this.Date_Heure_DebutField;
            }
            set {
                if ((this.Date_Heure_DebutField.Equals(value) != true)) {
                    this.Date_Heure_DebutField = value;
                    this.RaisePropertyChanged("Date_Heure_Debut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Heure_Fin {
            get {
                return this.Date_Heure_FinField;
            }
            set {
                if ((this.Date_Heure_FinField.Equals(value) != true)) {
                    this.Date_Heure_FinField = value;
                    this.RaisePropertyChanged("Date_Heure_Fin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lieu {
            get {
                return this.LieuField;
            }
            set {
                if ((object.ReferenceEquals(this.LieuField, value) != true)) {
                    this.LieuField = value;
                    this.RaisePropertyChanged("Lieu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Publiee {
            get {
                return this.PublieeField;
            }
            set {
                if ((this.PublieeField.Equals(value) != true)) {
                    this.PublieeField = value;
                    this.RaisePropertyChanged("Publiee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolarSystem.Saturn.DataAccess.Webservice.Ville Ville {
            get {
                return this.VilleField;
            }
            set {
                if ((object.ReferenceEquals(this.VilleField, value) != true)) {
                    this.VilleField = value;
                    this.RaisePropertyChanged("Ville");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ville", Namespace="http://schemas.datacontract.org/2004/07/SolarSystem.Earth.Common")]
    public partial class Ville : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Code_VilleField;
        
        private string EmailField;
        
        private string LibelleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code_Ville {
            get {
                return this.Code_VilleField;
            }
            set {
                if ((this.Code_VilleField.Equals(value) != true)) {
                    this.Code_VilleField = value;
                    this.RaisePropertyChanged("Code_Ville");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Libelle {
            get {
                return this.LibelleField;
            }
            set {
                if ((object.ReferenceEquals(this.LibelleField, value) != true)) {
                    this.LibelleField = value;
                    this.RaisePropertyChanged("Libelle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortOrder", Namespace="http://schemas.datacontract.org/2004/07/System.Data.SqlClient")]
    public enum SortOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unspecified = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Descending = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lien", Namespace="http://schemas.datacontract.org/2004/07/SolarSystem.Earth.Common")]
    public partial class Lien : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Code_LienField;
        
        private string DescriptionField;
        
        private string ImageField;
        
        private string NomField;
        
        private int OrdreField;
        
        private string URLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code_Lien {
            get {
                return this.Code_LienField;
            }
            set {
                if ((this.Code_LienField.Equals(value) != true)) {
                    this.Code_LienField = value;
                    this.RaisePropertyChanged("Code_Lien");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ordre {
            get {
                return this.OrdreField;
            }
            set {
                if ((this.OrdreField.Equals(value) != true)) {
                    this.OrdreField = value;
                    this.RaisePropertyChanged("Ordre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Membre", Namespace="http://schemas.datacontract.org/2004/07/SolarSystem.Earth.Common")]
    public partial class Membre : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SolarSystem.Saturn.DataAccess.Webservice.Classe ClasseField;
        
        private int Code_MembreField;
        
        private string Email_EPSIField;
        
        private string Email_persoField;
        
        private string ImageField;
        
        private string Mot_de_passeField;
        
        private string MotivationsField;
        
        private string NomField;
        
        private string PrenomField;
        
        private string PresentationField;
        
        private string PseudoField;
        
        private SolarSystem.Saturn.DataAccess.Webservice.Role RoleField;
        
        private string Site_webField;
        
        private string StatutField;
        
        private string Telephone_mobileField;
        
        private string URLField;
        
        private string URL_FacebookField;
        
        private string URL_LinkedInField;
        
        private string URL_TwitterField;
        
        private string URL_ViadeoField;
        
        private SolarSystem.Saturn.DataAccess.Webservice.Ville VilleField;
        
        private string Ville_origineField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolarSystem.Saturn.DataAccess.Webservice.Classe Classe {
            get {
                return this.ClasseField;
            }
            set {
                if ((object.ReferenceEquals(this.ClasseField, value) != true)) {
                    this.ClasseField = value;
                    this.RaisePropertyChanged("Classe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code_Membre {
            get {
                return this.Code_MembreField;
            }
            set {
                if ((this.Code_MembreField.Equals(value) != true)) {
                    this.Code_MembreField = value;
                    this.RaisePropertyChanged("Code_Membre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email_EPSI {
            get {
                return this.Email_EPSIField;
            }
            set {
                if ((object.ReferenceEquals(this.Email_EPSIField, value) != true)) {
                    this.Email_EPSIField = value;
                    this.RaisePropertyChanged("Email_EPSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email_perso {
            get {
                return this.Email_persoField;
            }
            set {
                if ((object.ReferenceEquals(this.Email_persoField, value) != true)) {
                    this.Email_persoField = value;
                    this.RaisePropertyChanged("Email_perso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mot_de_passe {
            get {
                return this.Mot_de_passeField;
            }
            set {
                if ((object.ReferenceEquals(this.Mot_de_passeField, value) != true)) {
                    this.Mot_de_passeField = value;
                    this.RaisePropertyChanged("Mot_de_passe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Motivations {
            get {
                return this.MotivationsField;
            }
            set {
                if ((object.ReferenceEquals(this.MotivationsField, value) != true)) {
                    this.MotivationsField = value;
                    this.RaisePropertyChanged("Motivations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom {
            get {
                return this.PrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomField, value) != true)) {
                    this.PrenomField = value;
                    this.RaisePropertyChanged("Prenom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Presentation {
            get {
                return this.PresentationField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationField, value) != true)) {
                    this.PresentationField = value;
                    this.RaisePropertyChanged("Presentation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pseudo {
            get {
                return this.PseudoField;
            }
            set {
                if ((object.ReferenceEquals(this.PseudoField, value) != true)) {
                    this.PseudoField = value;
                    this.RaisePropertyChanged("Pseudo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolarSystem.Saturn.DataAccess.Webservice.Role Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Site_web {
            get {
                return this.Site_webField;
            }
            set {
                if ((object.ReferenceEquals(this.Site_webField, value) != true)) {
                    this.Site_webField = value;
                    this.RaisePropertyChanged("Site_web");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Statut {
            get {
                return this.StatutField;
            }
            set {
                if ((object.ReferenceEquals(this.StatutField, value) != true)) {
                    this.StatutField = value;
                    this.RaisePropertyChanged("Statut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone_mobile {
            get {
                return this.Telephone_mobileField;
            }
            set {
                if ((object.ReferenceEquals(this.Telephone_mobileField, value) != true)) {
                    this.Telephone_mobileField = value;
                    this.RaisePropertyChanged("Telephone_mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL_Facebook {
            get {
                return this.URL_FacebookField;
            }
            set {
                if ((object.ReferenceEquals(this.URL_FacebookField, value) != true)) {
                    this.URL_FacebookField = value;
                    this.RaisePropertyChanged("URL_Facebook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL_LinkedIn {
            get {
                return this.URL_LinkedInField;
            }
            set {
                if ((object.ReferenceEquals(this.URL_LinkedInField, value) != true)) {
                    this.URL_LinkedInField = value;
                    this.RaisePropertyChanged("URL_LinkedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL_Twitter {
            get {
                return this.URL_TwitterField;
            }
            set {
                if ((object.ReferenceEquals(this.URL_TwitterField, value) != true)) {
                    this.URL_TwitterField = value;
                    this.RaisePropertyChanged("URL_Twitter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL_Viadeo {
            get {
                return this.URL_ViadeoField;
            }
            set {
                if ((object.ReferenceEquals(this.URL_ViadeoField, value) != true)) {
                    this.URL_ViadeoField = value;
                    this.RaisePropertyChanged("URL_Viadeo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolarSystem.Saturn.DataAccess.Webservice.Ville Ville {
            get {
                return this.VilleField;
            }
            set {
                if ((object.ReferenceEquals(this.VilleField, value) != true)) {
                    this.VilleField = value;
                    this.RaisePropertyChanged("Ville");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ville_origine {
            get {
                return this.Ville_origineField;
            }
            set {
                if ((object.ReferenceEquals(this.Ville_origineField, value) != true)) {
                    this.Ville_origineField = value;
                    this.RaisePropertyChanged("Ville_origine");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/SolarSystem.Earth.Common")]
    public partial class Role : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Code_RoleField;
        
        private string LibelleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code_Role {
            get {
                return this.Code_RoleField;
            }
            set {
                if ((this.Code_RoleField.Equals(value) != true)) {
                    this.Code_RoleField = value;
                    this.RaisePropertyChanged("Code_Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Libelle {
            get {
                return this.LibelleField;
            }
            set {
                if ((object.ReferenceEquals(this.LibelleField, value) != true)) {
                    this.LibelleField = value;
                    this.RaisePropertyChanged("Libelle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="News", Namespace="http://schemas.datacontract.org/2004/07/SolarSystem.Earth.Common")]
    public partial class News : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Code_NewsField;
        
        private System.DateTime Date_HeureField;
        
        private string ImageField;
        
        private SolarSystem.Saturn.DataAccess.Webservice.Membre MembreField;
        
        private string Mots_ClesField;
        
        private bool PublieeField;
        
        private string Texte_CourtField;
        
        private string Texte_LongField;
        
        private string TitreField;
        
        private string URLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code_News {
            get {
                return this.Code_NewsField;
            }
            set {
                if ((this.Code_NewsField.Equals(value) != true)) {
                    this.Code_NewsField = value;
                    this.RaisePropertyChanged("Code_News");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Heure {
            get {
                return this.Date_HeureField;
            }
            set {
                if ((this.Date_HeureField.Equals(value) != true)) {
                    this.Date_HeureField = value;
                    this.RaisePropertyChanged("Date_Heure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolarSystem.Saturn.DataAccess.Webservice.Membre Membre {
            get {
                return this.MembreField;
            }
            set {
                if ((object.ReferenceEquals(this.MembreField, value) != true)) {
                    this.MembreField = value;
                    this.RaisePropertyChanged("Membre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mots_Cles {
            get {
                return this.Mots_ClesField;
            }
            set {
                if ((object.ReferenceEquals(this.Mots_ClesField, value) != true)) {
                    this.Mots_ClesField = value;
                    this.RaisePropertyChanged("Mots_Cles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Publiee {
            get {
                return this.PublieeField;
            }
            set {
                if ((this.PublieeField.Equals(value) != true)) {
                    this.PublieeField = value;
                    this.RaisePropertyChanged("Publiee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Texte_Court {
            get {
                return this.Texte_CourtField;
            }
            set {
                if ((object.ReferenceEquals(this.Texte_CourtField, value) != true)) {
                    this.Texte_CourtField = value;
                    this.RaisePropertyChanged("Texte_Court");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Texte_Long {
            get {
                return this.Texte_LongField;
            }
            set {
                if ((object.ReferenceEquals(this.Texte_LongField, value) != true)) {
                    this.Texte_LongField = value;
                    this.RaisePropertyChanged("Texte_Long");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titre {
            get {
                return this.TitreField;
            }
            set {
                if ((object.ReferenceEquals(this.TitreField, value) != true)) {
                    this.TitreField = value;
                    this.RaisePropertyChanged("Titre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Projet", Namespace="http://schemas.datacontract.org/2004/07/SolarSystem.Earth.Common")]
    public partial class Projet : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AvancementField;
        
        private int Code_ProjetField;
        
        private string DescriptionField;
        
        private string ImageField;
        
        private string NomField;
        
        private SolarSystem.Saturn.DataAccess.Webservice.Ville VilleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Avancement {
            get {
                return this.AvancementField;
            }
            set {
                if ((this.AvancementField.Equals(value) != true)) {
                    this.AvancementField = value;
                    this.RaisePropertyChanged("Avancement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code_Projet {
            get {
                return this.Code_ProjetField;
            }
            set {
                if ((this.Code_ProjetField.Equals(value) != true)) {
                    this.Code_ProjetField = value;
                    this.RaisePropertyChanged("Code_Projet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SolarSystem.Saturn.DataAccess.Webservice.Ville Ville {
            get {
                return this.VilleField;
            }
            set {
                if ((object.ReferenceEquals(this.VilleField, value) != true)) {
                    this.VilleField = value;
                    this.RaisePropertyChanged("Ville");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Publicite", Namespace="http://schemas.datacontract.org/2004/07/SolarSystem.Earth.Common")]
    public partial class Publicite : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Code_PubliciteField;
        
        private string ImageField;
        
        private string NomField;
        
        private string PresentationField;
        
        private bool PublieeField;
        
        private string URLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code_Publicite {
            get {
                return this.Code_PubliciteField;
            }
            set {
                if ((this.Code_PubliciteField.Equals(value) != true)) {
                    this.Code_PubliciteField = value;
                    this.RaisePropertyChanged("Code_Publicite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Presentation {
            get {
                return this.PresentationField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationField, value) != true)) {
                    this.PresentationField = value;
                    this.RaisePropertyChanged("Presentation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Publiee {
            get {
                return this.PublieeField;
            }
            set {
                if ((this.PublieeField.Equals(value) != true)) {
                    this.PublieeField = value;
                    this.RaisePropertyChanged("Publiee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Salon", Namespace="http://schemas.datacontract.org/2004/07/SolarSystem.Earth.Common")]
    public partial class Salon : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Code_SalonField;
        
        private System.DateTime Date_Heure_DebutField;
        
        private System.DateTime Date_Heure_FinField;
        
        private string DescriptionField;
        
        private string ImageField;
        
        private string LieuField;
        
        private string NomField;
        
        private bool PublieField;
        
        private string URLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code_Salon {
            get {
                return this.Code_SalonField;
            }
            set {
                if ((this.Code_SalonField.Equals(value) != true)) {
                    this.Code_SalonField = value;
                    this.RaisePropertyChanged("Code_Salon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Heure_Debut {
            get {
                return this.Date_Heure_DebutField;
            }
            set {
                if ((this.Date_Heure_DebutField.Equals(value) != true)) {
                    this.Date_Heure_DebutField = value;
                    this.RaisePropertyChanged("Date_Heure_Debut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Heure_Fin {
            get {
                return this.Date_Heure_FinField;
            }
            set {
                if ((this.Date_Heure_FinField.Equals(value) != true)) {
                    this.Date_Heure_FinField = value;
                    this.RaisePropertyChanged("Date_Heure_Fin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lieu {
            get {
                return this.LieuField;
            }
            set {
                if ((object.ReferenceEquals(this.LieuField, value) != true)) {
                    this.LieuField = value;
                    this.RaisePropertyChanged("Lieu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Publie {
            get {
                return this.PublieField;
            }
            set {
                if ((this.PublieField.Equals(value) != true)) {
                    this.PublieField = value;
                    this.RaisePropertyChanged("Publie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Webservice.IClasseReader")]
    public interface IClasseReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClasseReader/GetClasse", ReplyAction="http://tempuri.org/IClasseReader/GetClasseResponse")]
        System.IAsyncResult BeginGetClasse(int code, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Classe EndGetClasse(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClasseReader/GetClasses", ReplyAction="http://tempuri.org/IClasseReader/GetClassesResponse")]
        System.IAsyncResult BeginGetClasses(System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Classe[] EndGetClasses(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClasseReaderChannel : SolarSystem.Saturn.DataAccess.Webservice.IClasseReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClasseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClasseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Classe Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Classe)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClassesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClassesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Classe[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Classe[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClasseReaderClient : System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IClasseReader>, SolarSystem.Saturn.DataAccess.Webservice.IClasseReader {
        
        private BeginOperationDelegate onBeginGetClasseDelegate;
        
        private EndOperationDelegate onEndGetClasseDelegate;
        
        private System.Threading.SendOrPostCallback onGetClasseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClassesDelegate;
        
        private EndOperationDelegate onEndGetClassesDelegate;
        
        private System.Threading.SendOrPostCallback onGetClassesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ClasseReaderClient() : 
                base(ClasseReaderClient.GetDefaultBinding(), ClasseReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public ClasseReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(ClasseReaderClient.GetBindingForEndpoint(endpointConfiguration), ClasseReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public ClasseReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ClasseReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public ClasseReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ClasseReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public ClasseReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetClasseCompletedEventArgs> GetClasseCompleted;
        
        public event System.EventHandler<GetClassesCompletedEventArgs> GetClassesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IClasseReader.BeginGetClasse(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClasse(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Classe SolarSystem.Saturn.DataAccess.Webservice.IClasseReader.EndGetClasse(System.IAsyncResult result) {
            return base.Channel.EndGetClasse(result);
        }
        
        private System.IAsyncResult OnBeginGetClasse(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IClasseReader)(this)).BeginGetClasse(code, callback, asyncState);
        }
        
        private object[] OnEndGetClasse(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Classe retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IClasseReader)(this)).EndGetClasse(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClasseCompleted(object state) {
            if ((this.GetClasseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClasseCompleted(this, new GetClasseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClasseAsync(int code) {
            this.GetClasseAsync(code, null);
        }
        
        public void GetClasseAsync(int code, object userState) {
            if ((this.onBeginGetClasseDelegate == null)) {
                this.onBeginGetClasseDelegate = new BeginOperationDelegate(this.OnBeginGetClasse);
            }
            if ((this.onEndGetClasseDelegate == null)) {
                this.onEndGetClasseDelegate = new EndOperationDelegate(this.OnEndGetClasse);
            }
            if ((this.onGetClasseCompletedDelegate == null)) {
                this.onGetClasseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClasseCompleted);
            }
            base.InvokeAsync(this.onBeginGetClasseDelegate, new object[] {
                        code}, this.onEndGetClasseDelegate, this.onGetClasseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IClasseReader.BeginGetClasses(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClasses(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Classe[] SolarSystem.Saturn.DataAccess.Webservice.IClasseReader.EndGetClasses(System.IAsyncResult result) {
            return base.Channel.EndGetClasses(result);
        }
        
        private System.IAsyncResult OnBeginGetClasses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.IClasseReader)(this)).BeginGetClasses(callback, asyncState);
        }
        
        private object[] OnEndGetClasses(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Classe[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IClasseReader)(this)).EndGetClasses(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClassesCompleted(object state) {
            if ((this.GetClassesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClassesCompleted(this, new GetClassesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClassesAsync() {
            this.GetClassesAsync(null);
        }
        
        public void GetClassesAsync(object userState) {
            if ((this.onBeginGetClassesDelegate == null)) {
                this.onBeginGetClassesDelegate = new BeginOperationDelegate(this.OnBeginGetClasses);
            }
            if ((this.onEndGetClassesDelegate == null)) {
                this.onEndGetClassesDelegate = new EndOperationDelegate(this.OnEndGetClasses);
            }
            if ((this.onGetClassesCompletedDelegate == null)) {
                this.onGetClassesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClassesCompleted);
            }
            base.InvokeAsync(this.onBeginGetClassesDelegate, null, this.onEndGetClassesDelegate, this.onGetClassesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SolarSystem.Saturn.DataAccess.Webservice.IClasseReader CreateChannel() {
            return new ClasseReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IClasseReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IClasseReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ClasseReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IClasseReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ClasseReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IClasseReader);
        }
        
        private class ClasseReaderClientChannel : ChannelBase<SolarSystem.Saturn.DataAccess.Webservice.IClasseReader>, SolarSystem.Saturn.DataAccess.Webservice.IClasseReader {
            
            public ClasseReaderClientChannel(System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IClasseReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetClasse(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetClasse", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Classe EndGetClasse(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Classe _result = ((SolarSystem.Saturn.DataAccess.Webservice.Classe)(base.EndInvoke("GetClasse", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetClasses(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetClasses", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Classe[] EndGetClasses(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Classe[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Classe[])(base.EndInvoke("GetClasses", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IClasseReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Webservice.IConferenceReader")]
    public interface IConferenceReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConference", ReplyAction="http://tempuri.org/IConferenceReader/GetConferenceResponse")]
        System.IAsyncResult BeginGetConference(int code, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Conference EndGetConference(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConferences", ReplyAction="http://tempuri.org/IConferenceReader/GetConferencesResponse")]
        System.IAsyncResult BeginGetConferences(System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Conference[] EndGetConferences(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConferencesLimited", ReplyAction="http://tempuri.org/IConferenceReader/GetConferencesLimitedResponse")]
        System.IAsyncResult BeginGetConferencesLimited(int indexFirstResult, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Conference[] EndGetConferencesLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConferencesSorted", ReplyAction="http://tempuri.org/IConferenceReader/GetConferencesSortedResponse")]
        System.IAsyncResult BeginGetConferencesSorted(int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Conference[] EndGetConferencesSorted(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConferencesByVille", ReplyAction="http://tempuri.org/IConferenceReader/GetConferencesByVilleResponse")]
        System.IAsyncResult BeginGetConferencesByVille(SolarSystem.Saturn.DataAccess.Webservice.Ville ville, int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Conference[] EndGetConferencesByVille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/GetConferenceLastInsertedId", ReplyAction="http://tempuri.org/IConferenceReader/GetConferenceLastInsertedIdResponse")]
        System.IAsyncResult BeginGetConferenceLastInsertedId(System.AsyncCallback callback, object asyncState);
        
        int EndGetConferenceLastInsertedId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConferenceReader/SearchConferences", ReplyAction="http://tempuri.org/IConferenceReader/SearchConferencesResponse")]
        System.IAsyncResult BeginSearchConferences(string keywords, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Conference[] EndSearchConferences(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConferenceReaderChannel : SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Conference Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Conference)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Conference[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Conference[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferencesLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferencesLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Conference[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Conference[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferencesSortedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferencesSortedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Conference[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Conference[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferencesByVilleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferencesByVilleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Conference[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Conference[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConferenceLastInsertedIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConferenceLastInsertedIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchConferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchConferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Conference[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Conference[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConferenceReaderClient : System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader>, SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader {
        
        private BeginOperationDelegate onBeginGetConferenceDelegate;
        
        private EndOperationDelegate onEndGetConferenceDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferenceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConferencesDelegate;
        
        private EndOperationDelegate onEndGetConferencesDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferencesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConferencesLimitedDelegate;
        
        private EndOperationDelegate onEndGetConferencesLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferencesLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConferencesSortedDelegate;
        
        private EndOperationDelegate onEndGetConferencesSortedDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferencesSortedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConferencesByVilleDelegate;
        
        private EndOperationDelegate onEndGetConferencesByVilleDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferencesByVilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConferenceLastInsertedIdDelegate;
        
        private EndOperationDelegate onEndGetConferenceLastInsertedIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetConferenceLastInsertedIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchConferencesDelegate;
        
        private EndOperationDelegate onEndSearchConferencesDelegate;
        
        private System.Threading.SendOrPostCallback onSearchConferencesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ConferenceReaderClient() : 
                base(ConferenceReaderClient.GetDefaultBinding(), ConferenceReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public ConferenceReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(ConferenceReaderClient.GetBindingForEndpoint(endpointConfiguration), ConferenceReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public ConferenceReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ConferenceReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public ConferenceReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ConferenceReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public ConferenceReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetConferenceCompletedEventArgs> GetConferenceCompleted;
        
        public event System.EventHandler<GetConferencesCompletedEventArgs> GetConferencesCompleted;
        
        public event System.EventHandler<GetConferencesLimitedCompletedEventArgs> GetConferencesLimitedCompleted;
        
        public event System.EventHandler<GetConferencesSortedCompletedEventArgs> GetConferencesSortedCompleted;
        
        public event System.EventHandler<GetConferencesByVilleCompletedEventArgs> GetConferencesByVilleCompleted;
        
        public event System.EventHandler<GetConferenceLastInsertedIdCompletedEventArgs> GetConferenceLastInsertedIdCompleted;
        
        public event System.EventHandler<SearchConferencesCompletedEventArgs> SearchConferencesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.BeginGetConference(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConference(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Conference SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.EndGetConference(System.IAsyncResult result) {
            return base.Channel.EndGetConference(result);
        }
        
        private System.IAsyncResult OnBeginGetConference(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).BeginGetConference(code, callback, asyncState);
        }
        
        private object[] OnEndGetConference(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Conference retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).EndGetConference(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferenceCompleted(object state) {
            if ((this.GetConferenceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferenceCompleted(this, new GetConferenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferenceAsync(int code) {
            this.GetConferenceAsync(code, null);
        }
        
        public void GetConferenceAsync(int code, object userState) {
            if ((this.onBeginGetConferenceDelegate == null)) {
                this.onBeginGetConferenceDelegate = new BeginOperationDelegate(this.OnBeginGetConference);
            }
            if ((this.onEndGetConferenceDelegate == null)) {
                this.onEndGetConferenceDelegate = new EndOperationDelegate(this.OnEndGetConference);
            }
            if ((this.onGetConferenceCompletedDelegate == null)) {
                this.onGetConferenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferenceCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferenceDelegate, new object[] {
                        code}, this.onEndGetConferenceDelegate, this.onGetConferenceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.BeginGetConferences(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConferences(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Conference[] SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.EndGetConferences(System.IAsyncResult result) {
            return base.Channel.EndGetConferences(result);
        }
        
        private System.IAsyncResult OnBeginGetConferences(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).BeginGetConferences(callback, asyncState);
        }
        
        private object[] OnEndGetConferences(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Conference[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).EndGetConferences(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferencesCompleted(object state) {
            if ((this.GetConferencesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferencesCompleted(this, new GetConferencesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferencesAsync() {
            this.GetConferencesAsync(null);
        }
        
        public void GetConferencesAsync(object userState) {
            if ((this.onBeginGetConferencesDelegate == null)) {
                this.onBeginGetConferencesDelegate = new BeginOperationDelegate(this.OnBeginGetConferences);
            }
            if ((this.onEndGetConferencesDelegate == null)) {
                this.onEndGetConferencesDelegate = new EndOperationDelegate(this.OnEndGetConferences);
            }
            if ((this.onGetConferencesCompletedDelegate == null)) {
                this.onGetConferencesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferencesCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferencesDelegate, null, this.onEndGetConferencesDelegate, this.onGetConferencesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.BeginGetConferencesLimited(int indexFirstResult, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConferencesLimited(indexFirstResult, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Conference[] SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.EndGetConferencesLimited(System.IAsyncResult result) {
            return base.Channel.EndGetConferencesLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetConferencesLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstResult = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).BeginGetConferencesLimited(indexFirstResult, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetConferencesLimited(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Conference[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).EndGetConferencesLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferencesLimitedCompleted(object state) {
            if ((this.GetConferencesLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferencesLimitedCompleted(this, new GetConferencesLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferencesLimitedAsync(int indexFirstResult, int numberOfResults) {
            this.GetConferencesLimitedAsync(indexFirstResult, numberOfResults, null);
        }
        
        public void GetConferencesLimitedAsync(int indexFirstResult, int numberOfResults, object userState) {
            if ((this.onBeginGetConferencesLimitedDelegate == null)) {
                this.onBeginGetConferencesLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetConferencesLimited);
            }
            if ((this.onEndGetConferencesLimitedDelegate == null)) {
                this.onEndGetConferencesLimitedDelegate = new EndOperationDelegate(this.OnEndGetConferencesLimited);
            }
            if ((this.onGetConferencesLimitedCompletedDelegate == null)) {
                this.onGetConferencesLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferencesLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferencesLimitedDelegate, new object[] {
                        indexFirstResult,
                        numberOfResults}, this.onEndGetConferencesLimitedDelegate, this.onGetConferencesLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.BeginGetConferencesSorted(int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConferencesSorted(indexFirstResult, numberOfResults, order, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Conference[] SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.EndGetConferencesSorted(System.IAsyncResult result) {
            return base.Channel.EndGetConferencesSorted(result);
        }
        
        private System.IAsyncResult OnBeginGetConferencesSorted(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstResult = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            SolarSystem.Saturn.DataAccess.Webservice.SortOrder order = ((SolarSystem.Saturn.DataAccess.Webservice.SortOrder)(inValues[2]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).BeginGetConferencesSorted(indexFirstResult, numberOfResults, order, callback, asyncState);
        }
        
        private object[] OnEndGetConferencesSorted(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Conference[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).EndGetConferencesSorted(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferencesSortedCompleted(object state) {
            if ((this.GetConferencesSortedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferencesSortedCompleted(this, new GetConferencesSortedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferencesSortedAsync(int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order) {
            this.GetConferencesSortedAsync(indexFirstResult, numberOfResults, order, null);
        }
        
        public void GetConferencesSortedAsync(int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, object userState) {
            if ((this.onBeginGetConferencesSortedDelegate == null)) {
                this.onBeginGetConferencesSortedDelegate = new BeginOperationDelegate(this.OnBeginGetConferencesSorted);
            }
            if ((this.onEndGetConferencesSortedDelegate == null)) {
                this.onEndGetConferencesSortedDelegate = new EndOperationDelegate(this.OnEndGetConferencesSorted);
            }
            if ((this.onGetConferencesSortedCompletedDelegate == null)) {
                this.onGetConferencesSortedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferencesSortedCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferencesSortedDelegate, new object[] {
                        indexFirstResult,
                        numberOfResults,
                        order}, this.onEndGetConferencesSortedDelegate, this.onGetConferencesSortedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.BeginGetConferencesByVille(SolarSystem.Saturn.DataAccess.Webservice.Ville ville, int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConferencesByVille(ville, indexFirstResult, numberOfResults, order, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Conference[] SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.EndGetConferencesByVille(System.IAsyncResult result) {
            return base.Channel.EndGetConferencesByVille(result);
        }
        
        private System.IAsyncResult OnBeginGetConferencesByVille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SolarSystem.Saturn.DataAccess.Webservice.Ville ville = ((SolarSystem.Saturn.DataAccess.Webservice.Ville)(inValues[0]));
            int indexFirstResult = ((int)(inValues[1]));
            int numberOfResults = ((int)(inValues[2]));
            SolarSystem.Saturn.DataAccess.Webservice.SortOrder order = ((SolarSystem.Saturn.DataAccess.Webservice.SortOrder)(inValues[3]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).BeginGetConferencesByVille(ville, indexFirstResult, numberOfResults, order, callback, asyncState);
        }
        
        private object[] OnEndGetConferencesByVille(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Conference[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).EndGetConferencesByVille(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferencesByVilleCompleted(object state) {
            if ((this.GetConferencesByVilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferencesByVilleCompleted(this, new GetConferencesByVilleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferencesByVilleAsync(SolarSystem.Saturn.DataAccess.Webservice.Ville ville, int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order) {
            this.GetConferencesByVilleAsync(ville, indexFirstResult, numberOfResults, order, null);
        }
        
        public void GetConferencesByVilleAsync(SolarSystem.Saturn.DataAccess.Webservice.Ville ville, int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, object userState) {
            if ((this.onBeginGetConferencesByVilleDelegate == null)) {
                this.onBeginGetConferencesByVilleDelegate = new BeginOperationDelegate(this.OnBeginGetConferencesByVille);
            }
            if ((this.onEndGetConferencesByVilleDelegate == null)) {
                this.onEndGetConferencesByVilleDelegate = new EndOperationDelegate(this.OnEndGetConferencesByVille);
            }
            if ((this.onGetConferencesByVilleCompletedDelegate == null)) {
                this.onGetConferencesByVilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferencesByVilleCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferencesByVilleDelegate, new object[] {
                        ville,
                        indexFirstResult,
                        numberOfResults,
                        order}, this.onEndGetConferencesByVilleDelegate, this.onGetConferencesByVilleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.BeginGetConferenceLastInsertedId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConferenceLastInsertedId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.EndGetConferenceLastInsertedId(System.IAsyncResult result) {
            return base.Channel.EndGetConferenceLastInsertedId(result);
        }
        
        private System.IAsyncResult OnBeginGetConferenceLastInsertedId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).BeginGetConferenceLastInsertedId(callback, asyncState);
        }
        
        private object[] OnEndGetConferenceLastInsertedId(System.IAsyncResult result) {
            int retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).EndGetConferenceLastInsertedId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConferenceLastInsertedIdCompleted(object state) {
            if ((this.GetConferenceLastInsertedIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConferenceLastInsertedIdCompleted(this, new GetConferenceLastInsertedIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConferenceLastInsertedIdAsync() {
            this.GetConferenceLastInsertedIdAsync(null);
        }
        
        public void GetConferenceLastInsertedIdAsync(object userState) {
            if ((this.onBeginGetConferenceLastInsertedIdDelegate == null)) {
                this.onBeginGetConferenceLastInsertedIdDelegate = new BeginOperationDelegate(this.OnBeginGetConferenceLastInsertedId);
            }
            if ((this.onEndGetConferenceLastInsertedIdDelegate == null)) {
                this.onEndGetConferenceLastInsertedIdDelegate = new EndOperationDelegate(this.OnEndGetConferenceLastInsertedId);
            }
            if ((this.onGetConferenceLastInsertedIdCompletedDelegate == null)) {
                this.onGetConferenceLastInsertedIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConferenceLastInsertedIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetConferenceLastInsertedIdDelegate, null, this.onEndGetConferenceLastInsertedIdDelegate, this.onGetConferenceLastInsertedIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.BeginSearchConferences(string keywords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchConferences(keywords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Conference[] SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader.EndSearchConferences(System.IAsyncResult result) {
            return base.Channel.EndSearchConferences(result);
        }
        
        private System.IAsyncResult OnBeginSearchConferences(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keywords = ((string)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).BeginSearchConferences(keywords, callback, asyncState);
        }
        
        private object[] OnEndSearchConferences(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Conference[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader)(this)).EndSearchConferences(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchConferencesCompleted(object state) {
            if ((this.SearchConferencesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchConferencesCompleted(this, new SearchConferencesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchConferencesAsync(string keywords) {
            this.SearchConferencesAsync(keywords, null);
        }
        
        public void SearchConferencesAsync(string keywords, object userState) {
            if ((this.onBeginSearchConferencesDelegate == null)) {
                this.onBeginSearchConferencesDelegate = new BeginOperationDelegate(this.OnBeginSearchConferences);
            }
            if ((this.onEndSearchConferencesDelegate == null)) {
                this.onEndSearchConferencesDelegate = new EndOperationDelegate(this.OnEndSearchConferences);
            }
            if ((this.onSearchConferencesCompletedDelegate == null)) {
                this.onSearchConferencesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchConferencesCompleted);
            }
            base.InvokeAsync(this.onBeginSearchConferencesDelegate, new object[] {
                        keywords}, this.onEndSearchConferencesDelegate, this.onSearchConferencesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader CreateChannel() {
            return new ConferenceReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IConferenceReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IConferenceReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ConferenceReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IConferenceReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ConferenceReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IConferenceReader);
        }
        
        private class ConferenceReaderClientChannel : ChannelBase<SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader>, SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader {
            
            public ConferenceReaderClientChannel(System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IConferenceReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetConference(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetConference", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Conference EndGetConference(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Conference _result = ((SolarSystem.Saturn.DataAccess.Webservice.Conference)(base.EndInvoke("GetConference", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConferences(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetConferences", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Conference[] EndGetConferences(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Conference[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Conference[])(base.EndInvoke("GetConferences", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConferencesLimited(int indexFirstResult, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = indexFirstResult;
                _args[1] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetConferencesLimited", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Conference[] EndGetConferencesLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Conference[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Conference[])(base.EndInvoke("GetConferencesLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConferencesSorted(int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = indexFirstResult;
                _args[1] = numberOfResults;
                _args[2] = order;
                System.IAsyncResult _result = base.BeginInvoke("GetConferencesSorted", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Conference[] EndGetConferencesSorted(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Conference[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Conference[])(base.EndInvoke("GetConferencesSorted", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConferencesByVille(SolarSystem.Saturn.DataAccess.Webservice.Ville ville, int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = ville;
                _args[1] = indexFirstResult;
                _args[2] = numberOfResults;
                _args[3] = order;
                System.IAsyncResult _result = base.BeginInvoke("GetConferencesByVille", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Conference[] EndGetConferencesByVille(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Conference[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Conference[])(base.EndInvoke("GetConferencesByVille", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConferenceLastInsertedId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetConferenceLastInsertedId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetConferenceLastInsertedId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetConferenceLastInsertedId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchConferences(string keywords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = keywords;
                System.IAsyncResult _result = base.BeginInvoke("SearchConferences", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Conference[] EndSearchConferences(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Conference[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Conference[])(base.EndInvoke("SearchConferences", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IConferenceReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Webservice.ILienReader")]
    public interface ILienReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILienReader/GetLien", ReplyAction="http://tempuri.org/ILienReader/GetLienResponse")]
        System.IAsyncResult BeginGetLien(int code, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Lien EndGetLien(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILienReader/GetLiens", ReplyAction="http://tempuri.org/ILienReader/GetLiensResponse")]
        System.IAsyncResult BeginGetLiens(System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Lien[] EndGetLiens(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILienReaderChannel : SolarSystem.Saturn.DataAccess.Webservice.ILienReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLienCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLienCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Lien Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Lien)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLiensCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLiensCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Lien[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Lien[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LienReaderClient : System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.ILienReader>, SolarSystem.Saturn.DataAccess.Webservice.ILienReader {
        
        private BeginOperationDelegate onBeginGetLienDelegate;
        
        private EndOperationDelegate onEndGetLienDelegate;
        
        private System.Threading.SendOrPostCallback onGetLienCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLiensDelegate;
        
        private EndOperationDelegate onEndGetLiensDelegate;
        
        private System.Threading.SendOrPostCallback onGetLiensCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LienReaderClient() : 
                base(LienReaderClient.GetDefaultBinding(), LienReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public LienReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(LienReaderClient.GetBindingForEndpoint(endpointConfiguration), LienReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public LienReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(LienReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public LienReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(LienReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public LienReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetLienCompletedEventArgs> GetLienCompleted;
        
        public event System.EventHandler<GetLiensCompletedEventArgs> GetLiensCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.ILienReader.BeginGetLien(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLien(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Lien SolarSystem.Saturn.DataAccess.Webservice.ILienReader.EndGetLien(System.IAsyncResult result) {
            return base.Channel.EndGetLien(result);
        }
        
        private System.IAsyncResult OnBeginGetLien(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.ILienReader)(this)).BeginGetLien(code, callback, asyncState);
        }
        
        private object[] OnEndGetLien(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Lien retVal = ((SolarSystem.Saturn.DataAccess.Webservice.ILienReader)(this)).EndGetLien(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLienCompleted(object state) {
            if ((this.GetLienCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLienCompleted(this, new GetLienCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLienAsync(int code) {
            this.GetLienAsync(code, null);
        }
        
        public void GetLienAsync(int code, object userState) {
            if ((this.onBeginGetLienDelegate == null)) {
                this.onBeginGetLienDelegate = new BeginOperationDelegate(this.OnBeginGetLien);
            }
            if ((this.onEndGetLienDelegate == null)) {
                this.onEndGetLienDelegate = new EndOperationDelegate(this.OnEndGetLien);
            }
            if ((this.onGetLienCompletedDelegate == null)) {
                this.onGetLienCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLienCompleted);
            }
            base.InvokeAsync(this.onBeginGetLienDelegate, new object[] {
                        code}, this.onEndGetLienDelegate, this.onGetLienCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.ILienReader.BeginGetLiens(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLiens(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Lien[] SolarSystem.Saturn.DataAccess.Webservice.ILienReader.EndGetLiens(System.IAsyncResult result) {
            return base.Channel.EndGetLiens(result);
        }
        
        private System.IAsyncResult OnBeginGetLiens(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.ILienReader)(this)).BeginGetLiens(callback, asyncState);
        }
        
        private object[] OnEndGetLiens(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Lien[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.ILienReader)(this)).EndGetLiens(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLiensCompleted(object state) {
            if ((this.GetLiensCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLiensCompleted(this, new GetLiensCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLiensAsync() {
            this.GetLiensAsync(null);
        }
        
        public void GetLiensAsync(object userState) {
            if ((this.onBeginGetLiensDelegate == null)) {
                this.onBeginGetLiensDelegate = new BeginOperationDelegate(this.OnBeginGetLiens);
            }
            if ((this.onEndGetLiensDelegate == null)) {
                this.onEndGetLiensDelegate = new EndOperationDelegate(this.OnEndGetLiens);
            }
            if ((this.onGetLiensCompletedDelegate == null)) {
                this.onGetLiensCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLiensCompleted);
            }
            base.InvokeAsync(this.onBeginGetLiensDelegate, null, this.onEndGetLiensDelegate, this.onGetLiensCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SolarSystem.Saturn.DataAccess.Webservice.ILienReader CreateChannel() {
            return new LienReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ILienReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ILienReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return LienReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ILienReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return LienReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ILienReader);
        }
        
        private class LienReaderClientChannel : ChannelBase<SolarSystem.Saturn.DataAccess.Webservice.ILienReader>, SolarSystem.Saturn.DataAccess.Webservice.ILienReader {
            
            public LienReaderClientChannel(System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.ILienReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetLien(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetLien", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Lien EndGetLien(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Lien _result = ((SolarSystem.Saturn.DataAccess.Webservice.Lien)(base.EndInvoke("GetLien", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLiens(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLiens", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Lien[] EndGetLiens(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Lien[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Lien[])(base.EndInvoke("GetLiens", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_ILienReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Webservice.IMembreReader")]
    public interface IMembreReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMembreReader/GetMembre", ReplyAction="http://tempuri.org/IMembreReader/GetMembreResponse")]
        System.IAsyncResult BeginGetMembre(int code, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Membre EndGetMembre(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMembreReader/GetMembres", ReplyAction="http://tempuri.org/IMembreReader/GetMembresResponse")]
        System.IAsyncResult BeginGetMembres(System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Membre[] EndGetMembres(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMembreReader/GetMembresLimited", ReplyAction="http://tempuri.org/IMembreReader/GetMembresLimitedResponse")]
        System.IAsyncResult BeginGetMembresLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Membre[] EndGetMembresLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMembreReader/GetMembresSorted", ReplyAction="http://tempuri.org/IMembreReader/GetMembresSortedResponse")]
        System.IAsyncResult BeginGetMembresSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Membre[] EndGetMembresSorted(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMembreReader/GetMembresByVilleAndRole", ReplyAction="http://tempuri.org/IMembreReader/GetMembresByVilleAndRoleResponse")]
        System.IAsyncResult BeginGetMembresByVilleAndRole(SolarSystem.Saturn.DataAccess.Webservice.Ville ville, SolarSystem.Saturn.DataAccess.Webservice.Role role, int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Membre[] EndGetMembresByVilleAndRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMembreReader/GetMembreLastInsertedId", ReplyAction="http://tempuri.org/IMembreReader/GetMembreLastInsertedIdResponse")]
        System.IAsyncResult BeginGetMembreLastInsertedId(System.AsyncCallback callback, object asyncState);
        
        int EndGetMembreLastInsertedId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMembreReader/SearchMembres", ReplyAction="http://tempuri.org/IMembreReader/SearchMembresResponse")]
        System.IAsyncResult BeginSearchMembres(string keywords, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Membre[] EndSearchMembres(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMembreReaderChannel : SolarSystem.Saturn.DataAccess.Webservice.IMembreReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Membre Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Membre)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Membre[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Membre[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembresLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembresLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Membre[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Membre[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembresSortedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembresSortedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Membre[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Membre[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembresByVilleAndRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembresByVilleAndRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Membre[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Membre[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMembreLastInsertedIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembreLastInsertedIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchMembresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchMembresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Membre[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Membre[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MembreReaderClient : System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IMembreReader>, SolarSystem.Saturn.DataAccess.Webservice.IMembreReader {
        
        private BeginOperationDelegate onBeginGetMembreDelegate;
        
        private EndOperationDelegate onEndGetMembreDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembresDelegate;
        
        private EndOperationDelegate onEndGetMembresDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembresCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembresLimitedDelegate;
        
        private EndOperationDelegate onEndGetMembresLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembresLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembresSortedDelegate;
        
        private EndOperationDelegate onEndGetMembresSortedDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembresSortedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembresByVilleAndRoleDelegate;
        
        private EndOperationDelegate onEndGetMembresByVilleAndRoleDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembresByVilleAndRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembreLastInsertedIdDelegate;
        
        private EndOperationDelegate onEndGetMembreLastInsertedIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembreLastInsertedIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchMembresDelegate;
        
        private EndOperationDelegate onEndSearchMembresDelegate;
        
        private System.Threading.SendOrPostCallback onSearchMembresCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MembreReaderClient() : 
                base(MembreReaderClient.GetDefaultBinding(), MembreReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public MembreReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(MembreReaderClient.GetBindingForEndpoint(endpointConfiguration), MembreReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public MembreReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MembreReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public MembreReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MembreReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public MembreReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetMembreCompletedEventArgs> GetMembreCompleted;
        
        public event System.EventHandler<GetMembresCompletedEventArgs> GetMembresCompleted;
        
        public event System.EventHandler<GetMembresLimitedCompletedEventArgs> GetMembresLimitedCompleted;
        
        public event System.EventHandler<GetMembresSortedCompletedEventArgs> GetMembresSortedCompleted;
        
        public event System.EventHandler<GetMembresByVilleAndRoleCompletedEventArgs> GetMembresByVilleAndRoleCompleted;
        
        public event System.EventHandler<GetMembreLastInsertedIdCompletedEventArgs> GetMembreLastInsertedIdCompleted;
        
        public event System.EventHandler<SearchMembresCompletedEventArgs> SearchMembresCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.BeginGetMembre(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembre(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Membre SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.EndGetMembre(System.IAsyncResult result) {
            return base.Channel.EndGetMembre(result);
        }
        
        private System.IAsyncResult OnBeginGetMembre(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).BeginGetMembre(code, callback, asyncState);
        }
        
        private object[] OnEndGetMembre(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Membre retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).EndGetMembre(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembreCompleted(object state) {
            if ((this.GetMembreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembreCompleted(this, new GetMembreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembreAsync(int code) {
            this.GetMembreAsync(code, null);
        }
        
        public void GetMembreAsync(int code, object userState) {
            if ((this.onBeginGetMembreDelegate == null)) {
                this.onBeginGetMembreDelegate = new BeginOperationDelegate(this.OnBeginGetMembre);
            }
            if ((this.onEndGetMembreDelegate == null)) {
                this.onEndGetMembreDelegate = new EndOperationDelegate(this.OnEndGetMembre);
            }
            if ((this.onGetMembreCompletedDelegate == null)) {
                this.onGetMembreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembreCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembreDelegate, new object[] {
                        code}, this.onEndGetMembreDelegate, this.onGetMembreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.BeginGetMembres(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembres(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Membre[] SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.EndGetMembres(System.IAsyncResult result) {
            return base.Channel.EndGetMembres(result);
        }
        
        private System.IAsyncResult OnBeginGetMembres(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).BeginGetMembres(callback, asyncState);
        }
        
        private object[] OnEndGetMembres(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Membre[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).EndGetMembres(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembresCompleted(object state) {
            if ((this.GetMembresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembresCompleted(this, new GetMembresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembresAsync() {
            this.GetMembresAsync(null);
        }
        
        public void GetMembresAsync(object userState) {
            if ((this.onBeginGetMembresDelegate == null)) {
                this.onBeginGetMembresDelegate = new BeginOperationDelegate(this.OnBeginGetMembres);
            }
            if ((this.onEndGetMembresDelegate == null)) {
                this.onEndGetMembresDelegate = new EndOperationDelegate(this.OnEndGetMembres);
            }
            if ((this.onGetMembresCompletedDelegate == null)) {
                this.onGetMembresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembresCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembresDelegate, null, this.onEndGetMembresDelegate, this.onGetMembresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.BeginGetMembresLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembresLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Membre[] SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.EndGetMembresLimited(System.IAsyncResult result) {
            return base.Channel.EndGetMembresLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetMembresLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).BeginGetMembresLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetMembresLimited(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Membre[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).EndGetMembresLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembresLimitedCompleted(object state) {
            if ((this.GetMembresLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembresLimitedCompleted(this, new GetMembresLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembresLimitedAsync(int indexFirstElement, int numberOfResults) {
            this.GetMembresLimitedAsync(indexFirstElement, numberOfResults, null);
        }
        
        public void GetMembresLimitedAsync(int indexFirstElement, int numberOfResults, object userState) {
            if ((this.onBeginGetMembresLimitedDelegate == null)) {
                this.onBeginGetMembresLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetMembresLimited);
            }
            if ((this.onEndGetMembresLimitedDelegate == null)) {
                this.onEndGetMembresLimitedDelegate = new EndOperationDelegate(this.OnEndGetMembresLimited);
            }
            if ((this.onGetMembresLimitedCompletedDelegate == null)) {
                this.onGetMembresLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembresLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembresLimitedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults}, this.onEndGetMembresLimitedDelegate, this.onGetMembresLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.BeginGetMembresSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembresSorted(indexFirstElement, numberOfResults, order, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Membre[] SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.EndGetMembresSorted(System.IAsyncResult result) {
            return base.Channel.EndGetMembresSorted(result);
        }
        
        private System.IAsyncResult OnBeginGetMembresSorted(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            SolarSystem.Saturn.DataAccess.Webservice.SortOrder order = ((SolarSystem.Saturn.DataAccess.Webservice.SortOrder)(inValues[2]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).BeginGetMembresSorted(indexFirstElement, numberOfResults, order, callback, asyncState);
        }
        
        private object[] OnEndGetMembresSorted(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Membre[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).EndGetMembresSorted(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembresSortedCompleted(object state) {
            if ((this.GetMembresSortedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembresSortedCompleted(this, new GetMembresSortedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembresSortedAsync(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order) {
            this.GetMembresSortedAsync(indexFirstElement, numberOfResults, order, null);
        }
        
        public void GetMembresSortedAsync(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, object userState) {
            if ((this.onBeginGetMembresSortedDelegate == null)) {
                this.onBeginGetMembresSortedDelegate = new BeginOperationDelegate(this.OnBeginGetMembresSorted);
            }
            if ((this.onEndGetMembresSortedDelegate == null)) {
                this.onEndGetMembresSortedDelegate = new EndOperationDelegate(this.OnEndGetMembresSorted);
            }
            if ((this.onGetMembresSortedCompletedDelegate == null)) {
                this.onGetMembresSortedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembresSortedCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembresSortedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults,
                        order}, this.onEndGetMembresSortedDelegate, this.onGetMembresSortedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.BeginGetMembresByVilleAndRole(SolarSystem.Saturn.DataAccess.Webservice.Ville ville, SolarSystem.Saturn.DataAccess.Webservice.Role role, int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembresByVilleAndRole(ville, role, indexFirstResult, numberOfResults, order, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Membre[] SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.EndGetMembresByVilleAndRole(System.IAsyncResult result) {
            return base.Channel.EndGetMembresByVilleAndRole(result);
        }
        
        private System.IAsyncResult OnBeginGetMembresByVilleAndRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SolarSystem.Saturn.DataAccess.Webservice.Ville ville = ((SolarSystem.Saturn.DataAccess.Webservice.Ville)(inValues[0]));
            SolarSystem.Saturn.DataAccess.Webservice.Role role = ((SolarSystem.Saturn.DataAccess.Webservice.Role)(inValues[1]));
            int indexFirstResult = ((int)(inValues[2]));
            int numberOfResults = ((int)(inValues[3]));
            SolarSystem.Saturn.DataAccess.Webservice.SortOrder order = ((SolarSystem.Saturn.DataAccess.Webservice.SortOrder)(inValues[4]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).BeginGetMembresByVilleAndRole(ville, role, indexFirstResult, numberOfResults, order, callback, asyncState);
        }
        
        private object[] OnEndGetMembresByVilleAndRole(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Membre[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).EndGetMembresByVilleAndRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembresByVilleAndRoleCompleted(object state) {
            if ((this.GetMembresByVilleAndRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembresByVilleAndRoleCompleted(this, new GetMembresByVilleAndRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembresByVilleAndRoleAsync(SolarSystem.Saturn.DataAccess.Webservice.Ville ville, SolarSystem.Saturn.DataAccess.Webservice.Role role, int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order) {
            this.GetMembresByVilleAndRoleAsync(ville, role, indexFirstResult, numberOfResults, order, null);
        }
        
        public void GetMembresByVilleAndRoleAsync(SolarSystem.Saturn.DataAccess.Webservice.Ville ville, SolarSystem.Saturn.DataAccess.Webservice.Role role, int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, object userState) {
            if ((this.onBeginGetMembresByVilleAndRoleDelegate == null)) {
                this.onBeginGetMembresByVilleAndRoleDelegate = new BeginOperationDelegate(this.OnBeginGetMembresByVilleAndRole);
            }
            if ((this.onEndGetMembresByVilleAndRoleDelegate == null)) {
                this.onEndGetMembresByVilleAndRoleDelegate = new EndOperationDelegate(this.OnEndGetMembresByVilleAndRole);
            }
            if ((this.onGetMembresByVilleAndRoleCompletedDelegate == null)) {
                this.onGetMembresByVilleAndRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembresByVilleAndRoleCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembresByVilleAndRoleDelegate, new object[] {
                        ville,
                        role,
                        indexFirstResult,
                        numberOfResults,
                        order}, this.onEndGetMembresByVilleAndRoleDelegate, this.onGetMembresByVilleAndRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.BeginGetMembreLastInsertedId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembreLastInsertedId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.EndGetMembreLastInsertedId(System.IAsyncResult result) {
            return base.Channel.EndGetMembreLastInsertedId(result);
        }
        
        private System.IAsyncResult OnBeginGetMembreLastInsertedId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).BeginGetMembreLastInsertedId(callback, asyncState);
        }
        
        private object[] OnEndGetMembreLastInsertedId(System.IAsyncResult result) {
            int retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).EndGetMembreLastInsertedId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembreLastInsertedIdCompleted(object state) {
            if ((this.GetMembreLastInsertedIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembreLastInsertedIdCompleted(this, new GetMembreLastInsertedIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembreLastInsertedIdAsync() {
            this.GetMembreLastInsertedIdAsync(null);
        }
        
        public void GetMembreLastInsertedIdAsync(object userState) {
            if ((this.onBeginGetMembreLastInsertedIdDelegate == null)) {
                this.onBeginGetMembreLastInsertedIdDelegate = new BeginOperationDelegate(this.OnBeginGetMembreLastInsertedId);
            }
            if ((this.onEndGetMembreLastInsertedIdDelegate == null)) {
                this.onEndGetMembreLastInsertedIdDelegate = new EndOperationDelegate(this.OnEndGetMembreLastInsertedId);
            }
            if ((this.onGetMembreLastInsertedIdCompletedDelegate == null)) {
                this.onGetMembreLastInsertedIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembreLastInsertedIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembreLastInsertedIdDelegate, null, this.onEndGetMembreLastInsertedIdDelegate, this.onGetMembreLastInsertedIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.BeginSearchMembres(string keywords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchMembres(keywords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Membre[] SolarSystem.Saturn.DataAccess.Webservice.IMembreReader.EndSearchMembres(System.IAsyncResult result) {
            return base.Channel.EndSearchMembres(result);
        }
        
        private System.IAsyncResult OnBeginSearchMembres(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keywords = ((string)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).BeginSearchMembres(keywords, callback, asyncState);
        }
        
        private object[] OnEndSearchMembres(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Membre[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IMembreReader)(this)).EndSearchMembres(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchMembresCompleted(object state) {
            if ((this.SearchMembresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchMembresCompleted(this, new SearchMembresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchMembresAsync(string keywords) {
            this.SearchMembresAsync(keywords, null);
        }
        
        public void SearchMembresAsync(string keywords, object userState) {
            if ((this.onBeginSearchMembresDelegate == null)) {
                this.onBeginSearchMembresDelegate = new BeginOperationDelegate(this.OnBeginSearchMembres);
            }
            if ((this.onEndSearchMembresDelegate == null)) {
                this.onEndSearchMembresDelegate = new EndOperationDelegate(this.OnEndSearchMembres);
            }
            if ((this.onSearchMembresCompletedDelegate == null)) {
                this.onSearchMembresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchMembresCompleted);
            }
            base.InvokeAsync(this.onBeginSearchMembresDelegate, new object[] {
                        keywords}, this.onEndSearchMembresDelegate, this.onSearchMembresCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SolarSystem.Saturn.DataAccess.Webservice.IMembreReader CreateChannel() {
            return new MembreReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMembreReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMembreReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return MembreReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMembreReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return MembreReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMembreReader);
        }
        
        private class MembreReaderClientChannel : ChannelBase<SolarSystem.Saturn.DataAccess.Webservice.IMembreReader>, SolarSystem.Saturn.DataAccess.Webservice.IMembreReader {
            
            public MembreReaderClientChannel(System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IMembreReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetMembre(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetMembre", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Membre EndGetMembre(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Membre _result = ((SolarSystem.Saturn.DataAccess.Webservice.Membre)(base.EndInvoke("GetMembre", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembres(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMembres", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Membre[] EndGetMembres(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Membre[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Membre[])(base.EndInvoke("GetMembres", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembresLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetMembresLimited", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Membre[] EndGetMembresLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Membre[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Membre[])(base.EndInvoke("GetMembresLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembresSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                _args[2] = order;
                System.IAsyncResult _result = base.BeginInvoke("GetMembresSorted", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Membre[] EndGetMembresSorted(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Membre[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Membre[])(base.EndInvoke("GetMembresSorted", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembresByVilleAndRole(SolarSystem.Saturn.DataAccess.Webservice.Ville ville, SolarSystem.Saturn.DataAccess.Webservice.Role role, int indexFirstResult, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = ville;
                _args[1] = role;
                _args[2] = indexFirstResult;
                _args[3] = numberOfResults;
                _args[4] = order;
                System.IAsyncResult _result = base.BeginInvoke("GetMembresByVilleAndRole", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Membre[] EndGetMembresByVilleAndRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Membre[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Membre[])(base.EndInvoke("GetMembresByVilleAndRole", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembreLastInsertedId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMembreLastInsertedId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetMembreLastInsertedId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetMembreLastInsertedId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchMembres(string keywords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = keywords;
                System.IAsyncResult _result = base.BeginInvoke("SearchMembres", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Membre[] EndSearchMembres(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Membre[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Membre[])(base.EndInvoke("SearchMembres", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IMembreReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Webservice.INewsReader")]
    public interface INewsReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/GetNews", ReplyAction="http://tempuri.org/INewsReader/GetNewsResponse")]
        System.IAsyncResult BeginGetNews(int code, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.News EndGetNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/GetListNews", ReplyAction="http://tempuri.org/INewsReader/GetListNewsResponse")]
        System.IAsyncResult BeginGetListNews(System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.News[] EndGetListNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/GetListNewsLimited", ReplyAction="http://tempuri.org/INewsReader/GetListNewsLimitedResponse")]
        System.IAsyncResult BeginGetListNewsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.News[] EndGetListNewsLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/GetListNewsSorted", ReplyAction="http://tempuri.org/INewsReader/GetListNewsSortedResponse")]
        System.IAsyncResult BeginGetListNewsSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.News[] EndGetListNewsSorted(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/GetNewsLastInsertedId", ReplyAction="http://tempuri.org/INewsReader/GetNewsLastInsertedIdResponse")]
        System.IAsyncResult BeginGetNewsLastInsertedId(System.AsyncCallback callback, object asyncState);
        
        int EndGetNewsLastInsertedId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INewsReader/SearchNews", ReplyAction="http://tempuri.org/INewsReader/SearchNewsResponse")]
        System.IAsyncResult BeginSearchNews(string keywords, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.News[] EndSearchNews(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsReaderChannel : SolarSystem.Saturn.DataAccess.Webservice.INewsReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.News Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.News)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.News[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.News[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListNewsLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListNewsLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.News[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.News[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListNewsSortedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListNewsSortedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.News[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.News[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsLastInsertedIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsLastInsertedIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.News[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.News[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsReaderClient : System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.INewsReader>, SolarSystem.Saturn.DataAccess.Webservice.INewsReader {
        
        private BeginOperationDelegate onBeginGetNewsDelegate;
        
        private EndOperationDelegate onEndGetNewsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListNewsDelegate;
        
        private EndOperationDelegate onEndGetListNewsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListNewsLimitedDelegate;
        
        private EndOperationDelegate onEndGetListNewsLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetListNewsLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListNewsSortedDelegate;
        
        private EndOperationDelegate onEndGetListNewsSortedDelegate;
        
        private System.Threading.SendOrPostCallback onGetListNewsSortedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsLastInsertedIdDelegate;
        
        private EndOperationDelegate onEndGetNewsLastInsertedIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsLastInsertedIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchNewsDelegate;
        
        private EndOperationDelegate onEndSearchNewsDelegate;
        
        private System.Threading.SendOrPostCallback onSearchNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public NewsReaderClient() : 
                base(NewsReaderClient.GetDefaultBinding(), NewsReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public NewsReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(NewsReaderClient.GetBindingForEndpoint(endpointConfiguration), NewsReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public NewsReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NewsReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public NewsReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NewsReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public NewsReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetNewsCompletedEventArgs> GetNewsCompleted;
        
        public event System.EventHandler<GetListNewsCompletedEventArgs> GetListNewsCompleted;
        
        public event System.EventHandler<GetListNewsLimitedCompletedEventArgs> GetListNewsLimitedCompleted;
        
        public event System.EventHandler<GetListNewsSortedCompletedEventArgs> GetListNewsSortedCompleted;
        
        public event System.EventHandler<GetNewsLastInsertedIdCompletedEventArgs> GetNewsLastInsertedIdCompleted;
        
        public event System.EventHandler<SearchNewsCompletedEventArgs> SearchNewsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.INewsReader.BeginGetNews(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNews(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.News SolarSystem.Saturn.DataAccess.Webservice.INewsReader.EndGetNews(System.IAsyncResult result) {
            return base.Channel.EndGetNews(result);
        }
        
        private System.IAsyncResult OnBeginGetNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).BeginGetNews(code, callback, asyncState);
        }
        
        private object[] OnEndGetNews(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.News retVal = ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).EndGetNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsCompleted(object state) {
            if ((this.GetNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsCompleted(this, new GetNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsAsync(int code) {
            this.GetNewsAsync(code, null);
        }
        
        public void GetNewsAsync(int code, object userState) {
            if ((this.onBeginGetNewsDelegate == null)) {
                this.onBeginGetNewsDelegate = new BeginOperationDelegate(this.OnBeginGetNews);
            }
            if ((this.onEndGetNewsDelegate == null)) {
                this.onEndGetNewsDelegate = new EndOperationDelegate(this.OnEndGetNews);
            }
            if ((this.onGetNewsCompletedDelegate == null)) {
                this.onGetNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsDelegate, new object[] {
                        code}, this.onEndGetNewsDelegate, this.onGetNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.INewsReader.BeginGetListNews(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListNews(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.News[] SolarSystem.Saturn.DataAccess.Webservice.INewsReader.EndGetListNews(System.IAsyncResult result) {
            return base.Channel.EndGetListNews(result);
        }
        
        private System.IAsyncResult OnBeginGetListNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).BeginGetListNews(callback, asyncState);
        }
        
        private object[] OnEndGetListNews(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.News[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).EndGetListNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListNewsCompleted(object state) {
            if ((this.GetListNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListNewsCompleted(this, new GetListNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListNewsAsync() {
            this.GetListNewsAsync(null);
        }
        
        public void GetListNewsAsync(object userState) {
            if ((this.onBeginGetListNewsDelegate == null)) {
                this.onBeginGetListNewsDelegate = new BeginOperationDelegate(this.OnBeginGetListNews);
            }
            if ((this.onEndGetListNewsDelegate == null)) {
                this.onEndGetListNewsDelegate = new EndOperationDelegate(this.OnEndGetListNews);
            }
            if ((this.onGetListNewsCompletedDelegate == null)) {
                this.onGetListNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListNewsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListNewsDelegate, null, this.onEndGetListNewsDelegate, this.onGetListNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.INewsReader.BeginGetListNewsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListNewsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.News[] SolarSystem.Saturn.DataAccess.Webservice.INewsReader.EndGetListNewsLimited(System.IAsyncResult result) {
            return base.Channel.EndGetListNewsLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetListNewsLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).BeginGetListNewsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetListNewsLimited(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.News[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).EndGetListNewsLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListNewsLimitedCompleted(object state) {
            if ((this.GetListNewsLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListNewsLimitedCompleted(this, new GetListNewsLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListNewsLimitedAsync(int indexFirstElement, int numberOfResults) {
            this.GetListNewsLimitedAsync(indexFirstElement, numberOfResults, null);
        }
        
        public void GetListNewsLimitedAsync(int indexFirstElement, int numberOfResults, object userState) {
            if ((this.onBeginGetListNewsLimitedDelegate == null)) {
                this.onBeginGetListNewsLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetListNewsLimited);
            }
            if ((this.onEndGetListNewsLimitedDelegate == null)) {
                this.onEndGetListNewsLimitedDelegate = new EndOperationDelegate(this.OnEndGetListNewsLimited);
            }
            if ((this.onGetListNewsLimitedCompletedDelegate == null)) {
                this.onGetListNewsLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListNewsLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetListNewsLimitedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults}, this.onEndGetListNewsLimitedDelegate, this.onGetListNewsLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.INewsReader.BeginGetListNewsSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListNewsSorted(indexFirstElement, numberOfResults, order, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.News[] SolarSystem.Saturn.DataAccess.Webservice.INewsReader.EndGetListNewsSorted(System.IAsyncResult result) {
            return base.Channel.EndGetListNewsSorted(result);
        }
        
        private System.IAsyncResult OnBeginGetListNewsSorted(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            SolarSystem.Saturn.DataAccess.Webservice.SortOrder order = ((SolarSystem.Saturn.DataAccess.Webservice.SortOrder)(inValues[2]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).BeginGetListNewsSorted(indexFirstElement, numberOfResults, order, callback, asyncState);
        }
        
        private object[] OnEndGetListNewsSorted(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.News[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).EndGetListNewsSorted(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListNewsSortedCompleted(object state) {
            if ((this.GetListNewsSortedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListNewsSortedCompleted(this, new GetListNewsSortedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListNewsSortedAsync(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order) {
            this.GetListNewsSortedAsync(indexFirstElement, numberOfResults, order, null);
        }
        
        public void GetListNewsSortedAsync(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, object userState) {
            if ((this.onBeginGetListNewsSortedDelegate == null)) {
                this.onBeginGetListNewsSortedDelegate = new BeginOperationDelegate(this.OnBeginGetListNewsSorted);
            }
            if ((this.onEndGetListNewsSortedDelegate == null)) {
                this.onEndGetListNewsSortedDelegate = new EndOperationDelegate(this.OnEndGetListNewsSorted);
            }
            if ((this.onGetListNewsSortedCompletedDelegate == null)) {
                this.onGetListNewsSortedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListNewsSortedCompleted);
            }
            base.InvokeAsync(this.onBeginGetListNewsSortedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults,
                        order}, this.onEndGetListNewsSortedDelegate, this.onGetListNewsSortedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.INewsReader.BeginGetNewsLastInsertedId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewsLastInsertedId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SolarSystem.Saturn.DataAccess.Webservice.INewsReader.EndGetNewsLastInsertedId(System.IAsyncResult result) {
            return base.Channel.EndGetNewsLastInsertedId(result);
        }
        
        private System.IAsyncResult OnBeginGetNewsLastInsertedId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).BeginGetNewsLastInsertedId(callback, asyncState);
        }
        
        private object[] OnEndGetNewsLastInsertedId(System.IAsyncResult result) {
            int retVal = ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).EndGetNewsLastInsertedId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsLastInsertedIdCompleted(object state) {
            if ((this.GetNewsLastInsertedIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsLastInsertedIdCompleted(this, new GetNewsLastInsertedIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsLastInsertedIdAsync() {
            this.GetNewsLastInsertedIdAsync(null);
        }
        
        public void GetNewsLastInsertedIdAsync(object userState) {
            if ((this.onBeginGetNewsLastInsertedIdDelegate == null)) {
                this.onBeginGetNewsLastInsertedIdDelegate = new BeginOperationDelegate(this.OnBeginGetNewsLastInsertedId);
            }
            if ((this.onEndGetNewsLastInsertedIdDelegate == null)) {
                this.onEndGetNewsLastInsertedIdDelegate = new EndOperationDelegate(this.OnEndGetNewsLastInsertedId);
            }
            if ((this.onGetNewsLastInsertedIdCompletedDelegate == null)) {
                this.onGetNewsLastInsertedIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsLastInsertedIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsLastInsertedIdDelegate, null, this.onEndGetNewsLastInsertedIdDelegate, this.onGetNewsLastInsertedIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.INewsReader.BeginSearchNews(string keywords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchNews(keywords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.News[] SolarSystem.Saturn.DataAccess.Webservice.INewsReader.EndSearchNews(System.IAsyncResult result) {
            return base.Channel.EndSearchNews(result);
        }
        
        private System.IAsyncResult OnBeginSearchNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keywords = ((string)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).BeginSearchNews(keywords, callback, asyncState);
        }
        
        private object[] OnEndSearchNews(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.News[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.INewsReader)(this)).EndSearchNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchNewsCompleted(object state) {
            if ((this.SearchNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchNewsCompleted(this, new SearchNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchNewsAsync(string keywords) {
            this.SearchNewsAsync(keywords, null);
        }
        
        public void SearchNewsAsync(string keywords, object userState) {
            if ((this.onBeginSearchNewsDelegate == null)) {
                this.onBeginSearchNewsDelegate = new BeginOperationDelegate(this.OnBeginSearchNews);
            }
            if ((this.onEndSearchNewsDelegate == null)) {
                this.onEndSearchNewsDelegate = new EndOperationDelegate(this.OnEndSearchNews);
            }
            if ((this.onSearchNewsCompletedDelegate == null)) {
                this.onSearchNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchNewsCompleted);
            }
            base.InvokeAsync(this.onBeginSearchNewsDelegate, new object[] {
                        keywords}, this.onEndSearchNewsDelegate, this.onSearchNewsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SolarSystem.Saturn.DataAccess.Webservice.INewsReader CreateChannel() {
            return new NewsReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INewsReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INewsReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return NewsReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_INewsReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return NewsReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_INewsReader);
        }
        
        private class NewsReaderClientChannel : ChannelBase<SolarSystem.Saturn.DataAccess.Webservice.INewsReader>, SolarSystem.Saturn.DataAccess.Webservice.INewsReader {
            
            public NewsReaderClientChannel(System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.INewsReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetNews(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetNews", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.News EndGetNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.News _result = ((SolarSystem.Saturn.DataAccess.Webservice.News)(base.EndInvoke("GetNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetListNews(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetListNews", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.News[] EndGetListNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.News[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.News[])(base.EndInvoke("GetListNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetListNewsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetListNewsLimited", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.News[] EndGetListNewsLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.News[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.News[])(base.EndInvoke("GetListNewsLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetListNewsSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                _args[2] = order;
                System.IAsyncResult _result = base.BeginInvoke("GetListNewsSorted", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.News[] EndGetListNewsSorted(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.News[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.News[])(base.EndInvoke("GetListNewsSorted", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewsLastInsertedId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNewsLastInsertedId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetNewsLastInsertedId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetNewsLastInsertedId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchNews(string keywords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = keywords;
                System.IAsyncResult _result = base.BeginInvoke("SearchNews", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.News[] EndSearchNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.News[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.News[])(base.EndInvoke("SearchNews", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_INewsReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Webservice.IProjetReader")]
    public interface IProjetReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjetReader/GetProjet", ReplyAction="http://tempuri.org/IProjetReader/GetProjetResponse")]
        System.IAsyncResult BeginGetProjet(int code, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Projet EndGetProjet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjetReader/GetProjets", ReplyAction="http://tempuri.org/IProjetReader/GetProjetsResponse")]
        System.IAsyncResult BeginGetProjets(System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Projet[] EndGetProjets(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjetReader/GetProjetsLimited", ReplyAction="http://tempuri.org/IProjetReader/GetProjetsLimitedResponse")]
        System.IAsyncResult BeginGetProjetsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Projet[] EndGetProjetsLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjetReader/GetProjetsSorted", ReplyAction="http://tempuri.org/IProjetReader/GetProjetsSortedResponse")]
        System.IAsyncResult BeginGetProjetsSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Projet[] EndGetProjetsSorted(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjetReader/GetProjetsByVille", ReplyAction="http://tempuri.org/IProjetReader/GetProjetsByVilleResponse")]
        System.IAsyncResult BeginGetProjetsByVille(SolarSystem.Saturn.DataAccess.Webservice.Ville filter, int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Projet[] EndGetProjetsByVille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProjetReader/GetProjetLastInsertedId", ReplyAction="http://tempuri.org/IProjetReader/GetProjetLastInsertedIdResponse")]
        System.IAsyncResult BeginGetProjetLastInsertedId(System.AsyncCallback callback, object asyncState);
        
        int EndGetProjetLastInsertedId(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjetReaderChannel : SolarSystem.Saturn.DataAccess.Webservice.IProjetReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Projet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Projet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Projet[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Projet[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjetsLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjetsLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Projet[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Projet[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjetsSortedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjetsSortedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Projet[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Projet[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjetsByVilleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjetsByVilleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Projet[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Projet[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjetLastInsertedIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjetLastInsertedIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjetReaderClient : System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IProjetReader>, SolarSystem.Saturn.DataAccess.Webservice.IProjetReader {
        
        private BeginOperationDelegate onBeginGetProjetDelegate;
        
        private EndOperationDelegate onEndGetProjetDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjetsDelegate;
        
        private EndOperationDelegate onEndGetProjetsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjetsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjetsLimitedDelegate;
        
        private EndOperationDelegate onEndGetProjetsLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjetsLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjetsSortedDelegate;
        
        private EndOperationDelegate onEndGetProjetsSortedDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjetsSortedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjetsByVilleDelegate;
        
        private EndOperationDelegate onEndGetProjetsByVilleDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjetsByVilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjetLastInsertedIdDelegate;
        
        private EndOperationDelegate onEndGetProjetLastInsertedIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjetLastInsertedIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ProjetReaderClient() : 
                base(ProjetReaderClient.GetDefaultBinding(), ProjetReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public ProjetReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(ProjetReaderClient.GetBindingForEndpoint(endpointConfiguration), ProjetReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public ProjetReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ProjetReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public ProjetReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ProjetReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public ProjetReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetProjetCompletedEventArgs> GetProjetCompleted;
        
        public event System.EventHandler<GetProjetsCompletedEventArgs> GetProjetsCompleted;
        
        public event System.EventHandler<GetProjetsLimitedCompletedEventArgs> GetProjetsLimitedCompleted;
        
        public event System.EventHandler<GetProjetsSortedCompletedEventArgs> GetProjetsSortedCompleted;
        
        public event System.EventHandler<GetProjetsByVilleCompletedEventArgs> GetProjetsByVilleCompleted;
        
        public event System.EventHandler<GetProjetLastInsertedIdCompletedEventArgs> GetProjetLastInsertedIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.BeginGetProjet(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjet(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Projet SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.EndGetProjet(System.IAsyncResult result) {
            return base.Channel.EndGetProjet(result);
        }
        
        private System.IAsyncResult OnBeginGetProjet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).BeginGetProjet(code, callback, asyncState);
        }
        
        private object[] OnEndGetProjet(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Projet retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).EndGetProjet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjetCompleted(object state) {
            if ((this.GetProjetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjetCompleted(this, new GetProjetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjetAsync(int code) {
            this.GetProjetAsync(code, null);
        }
        
        public void GetProjetAsync(int code, object userState) {
            if ((this.onBeginGetProjetDelegate == null)) {
                this.onBeginGetProjetDelegate = new BeginOperationDelegate(this.OnBeginGetProjet);
            }
            if ((this.onEndGetProjetDelegate == null)) {
                this.onEndGetProjetDelegate = new EndOperationDelegate(this.OnEndGetProjet);
            }
            if ((this.onGetProjetCompletedDelegate == null)) {
                this.onGetProjetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjetCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjetDelegate, new object[] {
                        code}, this.onEndGetProjetDelegate, this.onGetProjetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.BeginGetProjets(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjets(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Projet[] SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.EndGetProjets(System.IAsyncResult result) {
            return base.Channel.EndGetProjets(result);
        }
        
        private System.IAsyncResult OnBeginGetProjets(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).BeginGetProjets(callback, asyncState);
        }
        
        private object[] OnEndGetProjets(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Projet[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).EndGetProjets(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjetsCompleted(object state) {
            if ((this.GetProjetsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjetsCompleted(this, new GetProjetsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjetsAsync() {
            this.GetProjetsAsync(null);
        }
        
        public void GetProjetsAsync(object userState) {
            if ((this.onBeginGetProjetsDelegate == null)) {
                this.onBeginGetProjetsDelegate = new BeginOperationDelegate(this.OnBeginGetProjets);
            }
            if ((this.onEndGetProjetsDelegate == null)) {
                this.onEndGetProjetsDelegate = new EndOperationDelegate(this.OnEndGetProjets);
            }
            if ((this.onGetProjetsCompletedDelegate == null)) {
                this.onGetProjetsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjetsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjetsDelegate, null, this.onEndGetProjetsDelegate, this.onGetProjetsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.BeginGetProjetsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjetsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Projet[] SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.EndGetProjetsLimited(System.IAsyncResult result) {
            return base.Channel.EndGetProjetsLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetProjetsLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).BeginGetProjetsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetProjetsLimited(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Projet[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).EndGetProjetsLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjetsLimitedCompleted(object state) {
            if ((this.GetProjetsLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjetsLimitedCompleted(this, new GetProjetsLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjetsLimitedAsync(int indexFirstElement, int numberOfResults) {
            this.GetProjetsLimitedAsync(indexFirstElement, numberOfResults, null);
        }
        
        public void GetProjetsLimitedAsync(int indexFirstElement, int numberOfResults, object userState) {
            if ((this.onBeginGetProjetsLimitedDelegate == null)) {
                this.onBeginGetProjetsLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetProjetsLimited);
            }
            if ((this.onEndGetProjetsLimitedDelegate == null)) {
                this.onEndGetProjetsLimitedDelegate = new EndOperationDelegate(this.OnEndGetProjetsLimited);
            }
            if ((this.onGetProjetsLimitedCompletedDelegate == null)) {
                this.onGetProjetsLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjetsLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjetsLimitedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults}, this.onEndGetProjetsLimitedDelegate, this.onGetProjetsLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.BeginGetProjetsSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjetsSorted(indexFirstElement, numberOfResults, order, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Projet[] SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.EndGetProjetsSorted(System.IAsyncResult result) {
            return base.Channel.EndGetProjetsSorted(result);
        }
        
        private System.IAsyncResult OnBeginGetProjetsSorted(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            SolarSystem.Saturn.DataAccess.Webservice.SortOrder order = ((SolarSystem.Saturn.DataAccess.Webservice.SortOrder)(inValues[2]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).BeginGetProjetsSorted(indexFirstElement, numberOfResults, order, callback, asyncState);
        }
        
        private object[] OnEndGetProjetsSorted(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Projet[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).EndGetProjetsSorted(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjetsSortedCompleted(object state) {
            if ((this.GetProjetsSortedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjetsSortedCompleted(this, new GetProjetsSortedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjetsSortedAsync(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order) {
            this.GetProjetsSortedAsync(indexFirstElement, numberOfResults, order, null);
        }
        
        public void GetProjetsSortedAsync(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, object userState) {
            if ((this.onBeginGetProjetsSortedDelegate == null)) {
                this.onBeginGetProjetsSortedDelegate = new BeginOperationDelegate(this.OnBeginGetProjetsSorted);
            }
            if ((this.onEndGetProjetsSortedDelegate == null)) {
                this.onEndGetProjetsSortedDelegate = new EndOperationDelegate(this.OnEndGetProjetsSorted);
            }
            if ((this.onGetProjetsSortedCompletedDelegate == null)) {
                this.onGetProjetsSortedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjetsSortedCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjetsSortedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults,
                        order}, this.onEndGetProjetsSortedDelegate, this.onGetProjetsSortedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.BeginGetProjetsByVille(SolarSystem.Saturn.DataAccess.Webservice.Ville filter, int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjetsByVille(filter, indexFirstElement, numberOfResults, order, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Projet[] SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.EndGetProjetsByVille(System.IAsyncResult result) {
            return base.Channel.EndGetProjetsByVille(result);
        }
        
        private System.IAsyncResult OnBeginGetProjetsByVille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SolarSystem.Saturn.DataAccess.Webservice.Ville filter = ((SolarSystem.Saturn.DataAccess.Webservice.Ville)(inValues[0]));
            int indexFirstElement = ((int)(inValues[1]));
            int numberOfResults = ((int)(inValues[2]));
            SolarSystem.Saturn.DataAccess.Webservice.SortOrder order = ((SolarSystem.Saturn.DataAccess.Webservice.SortOrder)(inValues[3]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).BeginGetProjetsByVille(filter, indexFirstElement, numberOfResults, order, callback, asyncState);
        }
        
        private object[] OnEndGetProjetsByVille(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Projet[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).EndGetProjetsByVille(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjetsByVilleCompleted(object state) {
            if ((this.GetProjetsByVilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjetsByVilleCompleted(this, new GetProjetsByVilleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjetsByVilleAsync(SolarSystem.Saturn.DataAccess.Webservice.Ville filter, int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order) {
            this.GetProjetsByVilleAsync(filter, indexFirstElement, numberOfResults, order, null);
        }
        
        public void GetProjetsByVilleAsync(SolarSystem.Saturn.DataAccess.Webservice.Ville filter, int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, object userState) {
            if ((this.onBeginGetProjetsByVilleDelegate == null)) {
                this.onBeginGetProjetsByVilleDelegate = new BeginOperationDelegate(this.OnBeginGetProjetsByVille);
            }
            if ((this.onEndGetProjetsByVilleDelegate == null)) {
                this.onEndGetProjetsByVilleDelegate = new EndOperationDelegate(this.OnEndGetProjetsByVille);
            }
            if ((this.onGetProjetsByVilleCompletedDelegate == null)) {
                this.onGetProjetsByVilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjetsByVilleCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjetsByVilleDelegate, new object[] {
                        filter,
                        indexFirstElement,
                        numberOfResults,
                        order}, this.onEndGetProjetsByVilleDelegate, this.onGetProjetsByVilleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.BeginGetProjetLastInsertedId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjetLastInsertedId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SolarSystem.Saturn.DataAccess.Webservice.IProjetReader.EndGetProjetLastInsertedId(System.IAsyncResult result) {
            return base.Channel.EndGetProjetLastInsertedId(result);
        }
        
        private System.IAsyncResult OnBeginGetProjetLastInsertedId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).BeginGetProjetLastInsertedId(callback, asyncState);
        }
        
        private object[] OnEndGetProjetLastInsertedId(System.IAsyncResult result) {
            int retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IProjetReader)(this)).EndGetProjetLastInsertedId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjetLastInsertedIdCompleted(object state) {
            if ((this.GetProjetLastInsertedIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjetLastInsertedIdCompleted(this, new GetProjetLastInsertedIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjetLastInsertedIdAsync() {
            this.GetProjetLastInsertedIdAsync(null);
        }
        
        public void GetProjetLastInsertedIdAsync(object userState) {
            if ((this.onBeginGetProjetLastInsertedIdDelegate == null)) {
                this.onBeginGetProjetLastInsertedIdDelegate = new BeginOperationDelegate(this.OnBeginGetProjetLastInsertedId);
            }
            if ((this.onEndGetProjetLastInsertedIdDelegate == null)) {
                this.onEndGetProjetLastInsertedIdDelegate = new EndOperationDelegate(this.OnEndGetProjetLastInsertedId);
            }
            if ((this.onGetProjetLastInsertedIdCompletedDelegate == null)) {
                this.onGetProjetLastInsertedIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjetLastInsertedIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjetLastInsertedIdDelegate, null, this.onEndGetProjetLastInsertedIdDelegate, this.onGetProjetLastInsertedIdCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SolarSystem.Saturn.DataAccess.Webservice.IProjetReader CreateChannel() {
            return new ProjetReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IProjetReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IProjetReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ProjetReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IProjetReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ProjetReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IProjetReader);
        }
        
        private class ProjetReaderClientChannel : ChannelBase<SolarSystem.Saturn.DataAccess.Webservice.IProjetReader>, SolarSystem.Saturn.DataAccess.Webservice.IProjetReader {
            
            public ProjetReaderClientChannel(System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IProjetReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetProjet(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetProjet", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Projet EndGetProjet(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Projet _result = ((SolarSystem.Saturn.DataAccess.Webservice.Projet)(base.EndInvoke("GetProjet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjets(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetProjets", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Projet[] EndGetProjets(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Projet[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Projet[])(base.EndInvoke("GetProjets", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjetsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetProjetsLimited", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Projet[] EndGetProjetsLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Projet[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Projet[])(base.EndInvoke("GetProjetsLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjetsSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                _args[2] = order;
                System.IAsyncResult _result = base.BeginInvoke("GetProjetsSorted", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Projet[] EndGetProjetsSorted(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Projet[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Projet[])(base.EndInvoke("GetProjetsSorted", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjetsByVille(SolarSystem.Saturn.DataAccess.Webservice.Ville filter, int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = filter;
                _args[1] = indexFirstElement;
                _args[2] = numberOfResults;
                _args[3] = order;
                System.IAsyncResult _result = base.BeginInvoke("GetProjetsByVille", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Projet[] EndGetProjetsByVille(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Projet[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Projet[])(base.EndInvoke("GetProjetsByVille", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjetLastInsertedId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetProjetLastInsertedId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetProjetLastInsertedId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetProjetLastInsertedId", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IProjetReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Webservice.IPubliciteReader")]
    public interface IPubliciteReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPubliciteReader/GetPublicite", ReplyAction="http://tempuri.org/IPubliciteReader/GetPubliciteResponse")]
        System.IAsyncResult BeginGetPublicite(int code, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Publicite EndGetPublicite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPubliciteReader/GetPublicites", ReplyAction="http://tempuri.org/IPubliciteReader/GetPublicitesResponse")]
        System.IAsyncResult BeginGetPublicites(System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Publicite[] EndGetPublicites(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPubliciteReaderChannel : SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPubliciteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPubliciteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Publicite Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Publicite)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPublicitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPublicitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Publicite[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Publicite[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PubliciteReaderClient : System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader>, SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader {
        
        private BeginOperationDelegate onBeginGetPubliciteDelegate;
        
        private EndOperationDelegate onEndGetPubliciteDelegate;
        
        private System.Threading.SendOrPostCallback onGetPubliciteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPublicitesDelegate;
        
        private EndOperationDelegate onEndGetPublicitesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPublicitesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PubliciteReaderClient() : 
                base(PubliciteReaderClient.GetDefaultBinding(), PubliciteReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public PubliciteReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(PubliciteReaderClient.GetBindingForEndpoint(endpointConfiguration), PubliciteReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public PubliciteReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PubliciteReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public PubliciteReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PubliciteReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public PubliciteReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetPubliciteCompletedEventArgs> GetPubliciteCompleted;
        
        public event System.EventHandler<GetPublicitesCompletedEventArgs> GetPublicitesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader.BeginGetPublicite(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPublicite(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Publicite SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader.EndGetPublicite(System.IAsyncResult result) {
            return base.Channel.EndGetPublicite(result);
        }
        
        private System.IAsyncResult OnBeginGetPublicite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader)(this)).BeginGetPublicite(code, callback, asyncState);
        }
        
        private object[] OnEndGetPublicite(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Publicite retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader)(this)).EndGetPublicite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPubliciteCompleted(object state) {
            if ((this.GetPubliciteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPubliciteCompleted(this, new GetPubliciteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPubliciteAsync(int code) {
            this.GetPubliciteAsync(code, null);
        }
        
        public void GetPubliciteAsync(int code, object userState) {
            if ((this.onBeginGetPubliciteDelegate == null)) {
                this.onBeginGetPubliciteDelegate = new BeginOperationDelegate(this.OnBeginGetPublicite);
            }
            if ((this.onEndGetPubliciteDelegate == null)) {
                this.onEndGetPubliciteDelegate = new EndOperationDelegate(this.OnEndGetPublicite);
            }
            if ((this.onGetPubliciteCompletedDelegate == null)) {
                this.onGetPubliciteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPubliciteCompleted);
            }
            base.InvokeAsync(this.onBeginGetPubliciteDelegate, new object[] {
                        code}, this.onEndGetPubliciteDelegate, this.onGetPubliciteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader.BeginGetPublicites(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPublicites(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Publicite[] SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader.EndGetPublicites(System.IAsyncResult result) {
            return base.Channel.EndGetPublicites(result);
        }
        
        private System.IAsyncResult OnBeginGetPublicites(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader)(this)).BeginGetPublicites(callback, asyncState);
        }
        
        private object[] OnEndGetPublicites(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Publicite[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader)(this)).EndGetPublicites(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPublicitesCompleted(object state) {
            if ((this.GetPublicitesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPublicitesCompleted(this, new GetPublicitesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPublicitesAsync() {
            this.GetPublicitesAsync(null);
        }
        
        public void GetPublicitesAsync(object userState) {
            if ((this.onBeginGetPublicitesDelegate == null)) {
                this.onBeginGetPublicitesDelegate = new BeginOperationDelegate(this.OnBeginGetPublicites);
            }
            if ((this.onEndGetPublicitesDelegate == null)) {
                this.onEndGetPublicitesDelegate = new EndOperationDelegate(this.OnEndGetPublicites);
            }
            if ((this.onGetPublicitesCompletedDelegate == null)) {
                this.onGetPublicitesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPublicitesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPublicitesDelegate, null, this.onEndGetPublicitesDelegate, this.onGetPublicitesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader CreateChannel() {
            return new PubliciteReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPubliciteReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPubliciteReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return PubliciteReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPubliciteReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return PubliciteReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPubliciteReader);
        }
        
        private class PubliciteReaderClientChannel : ChannelBase<SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader>, SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader {
            
            public PubliciteReaderClientChannel(System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IPubliciteReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetPublicite(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetPublicite", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Publicite EndGetPublicite(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Publicite _result = ((SolarSystem.Saturn.DataAccess.Webservice.Publicite)(base.EndInvoke("GetPublicite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPublicites(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPublicites", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Publicite[] EndGetPublicites(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Publicite[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Publicite[])(base.EndInvoke("GetPublicites", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IPubliciteReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Webservice.IRoleReader")]
    public interface IRoleReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRoleReader/GetRole", ReplyAction="http://tempuri.org/IRoleReader/GetRoleResponse")]
        System.IAsyncResult BeginGetRole(int code, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Role EndGetRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRoleReader/GetRoles", ReplyAction="http://tempuri.org/IRoleReader/GetRolesResponse")]
        System.IAsyncResult BeginGetRoles(System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Role[] EndGetRoles(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoleReaderChannel : SolarSystem.Saturn.DataAccess.Webservice.IRoleReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Role Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Role)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Role[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Role[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleReaderClient : System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IRoleReader>, SolarSystem.Saturn.DataAccess.Webservice.IRoleReader {
        
        private BeginOperationDelegate onBeginGetRoleDelegate;
        
        private EndOperationDelegate onEndGetRoleDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRolesDelegate;
        
        private EndOperationDelegate onEndGetRolesDelegate;
        
        private System.Threading.SendOrPostCallback onGetRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RoleReaderClient() : 
                base(RoleReaderClient.GetDefaultBinding(), RoleReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public RoleReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(RoleReaderClient.GetBindingForEndpoint(endpointConfiguration), RoleReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public RoleReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RoleReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public RoleReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RoleReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public RoleReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetRoleCompletedEventArgs> GetRoleCompleted;
        
        public event System.EventHandler<GetRolesCompletedEventArgs> GetRolesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IRoleReader.BeginGetRole(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRole(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Role SolarSystem.Saturn.DataAccess.Webservice.IRoleReader.EndGetRole(System.IAsyncResult result) {
            return base.Channel.EndGetRole(result);
        }
        
        private System.IAsyncResult OnBeginGetRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IRoleReader)(this)).BeginGetRole(code, callback, asyncState);
        }
        
        private object[] OnEndGetRole(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Role retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IRoleReader)(this)).EndGetRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoleCompleted(object state) {
            if ((this.GetRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoleCompleted(this, new GetRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoleAsync(int code) {
            this.GetRoleAsync(code, null);
        }
        
        public void GetRoleAsync(int code, object userState) {
            if ((this.onBeginGetRoleDelegate == null)) {
                this.onBeginGetRoleDelegate = new BeginOperationDelegate(this.OnBeginGetRole);
            }
            if ((this.onEndGetRoleDelegate == null)) {
                this.onEndGetRoleDelegate = new EndOperationDelegate(this.OnEndGetRole);
            }
            if ((this.onGetRoleCompletedDelegate == null)) {
                this.onGetRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoleCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoleDelegate, new object[] {
                        code}, this.onEndGetRoleDelegate, this.onGetRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IRoleReader.BeginGetRoles(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoles(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Role[] SolarSystem.Saturn.DataAccess.Webservice.IRoleReader.EndGetRoles(System.IAsyncResult result) {
            return base.Channel.EndGetRoles(result);
        }
        
        private System.IAsyncResult OnBeginGetRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.IRoleReader)(this)).BeginGetRoles(callback, asyncState);
        }
        
        private object[] OnEndGetRoles(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Role[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IRoleReader)(this)).EndGetRoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRolesCompleted(object state) {
            if ((this.GetRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRolesAsync() {
            this.GetRolesAsync(null);
        }
        
        public void GetRolesAsync(object userState) {
            if ((this.onBeginGetRolesDelegate == null)) {
                this.onBeginGetRolesDelegate = new BeginOperationDelegate(this.OnBeginGetRoles);
            }
            if ((this.onEndGetRolesDelegate == null)) {
                this.onEndGetRolesDelegate = new EndOperationDelegate(this.OnEndGetRoles);
            }
            if ((this.onGetRolesCompletedDelegate == null)) {
                this.onGetRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRolesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRolesDelegate, null, this.onEndGetRolesDelegate, this.onGetRolesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SolarSystem.Saturn.DataAccess.Webservice.IRoleReader CreateChannel() {
            return new RoleReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRoleReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRoleReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return RoleReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IRoleReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return RoleReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IRoleReader);
        }
        
        private class RoleReaderClientChannel : ChannelBase<SolarSystem.Saturn.DataAccess.Webservice.IRoleReader>, SolarSystem.Saturn.DataAccess.Webservice.IRoleReader {
            
            public RoleReaderClientChannel(System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IRoleReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetRole(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetRole", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Role EndGetRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Role _result = ((SolarSystem.Saturn.DataAccess.Webservice.Role)(base.EndInvoke("GetRole", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRoles(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRoles", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Role[] EndGetRoles(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Role[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Role[])(base.EndInvoke("GetRoles", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IRoleReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Webservice.ISalonReader")]
    public interface ISalonReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISalonReader/GetSalon", ReplyAction="http://tempuri.org/ISalonReader/GetSalonResponse")]
        System.IAsyncResult BeginGetSalon(int code, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Salon EndGetSalon(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISalonReader/GetSalons", ReplyAction="http://tempuri.org/ISalonReader/GetSalonsResponse")]
        System.IAsyncResult BeginGetSalons(System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Salon[] EndGetSalons(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISalonReader/GetSalonsLimited", ReplyAction="http://tempuri.org/ISalonReader/GetSalonsLimitedResponse")]
        System.IAsyncResult BeginGetSalonsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Salon[] EndGetSalonsLimited(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISalonReader/GetSalonsSorted", ReplyAction="http://tempuri.org/ISalonReader/GetSalonsSortedResponse")]
        System.IAsyncResult BeginGetSalonsSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Salon[] EndGetSalonsSorted(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISalonReader/GetSalonLastInsertedId", ReplyAction="http://tempuri.org/ISalonReader/GetSalonLastInsertedIdResponse")]
        System.IAsyncResult BeginGetSalonLastInsertedId(System.AsyncCallback callback, object asyncState);
        
        int EndGetSalonLastInsertedId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISalonReader/SearchSalons", ReplyAction="http://tempuri.org/ISalonReader/SearchSalonsResponse")]
        System.IAsyncResult BeginSearchSalons(string keywords, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Salon[] EndSearchSalons(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalonReaderChannel : SolarSystem.Saturn.DataAccess.Webservice.ISalonReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSalonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSalonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Salon Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Salon)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSalonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSalonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Salon[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Salon[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSalonsLimitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSalonsLimitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Salon[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Salon[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSalonsSortedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSalonsSortedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Salon[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Salon[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSalonLastInsertedIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSalonLastInsertedIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchSalonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchSalonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Salon[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Salon[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalonReaderClient : System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.ISalonReader>, SolarSystem.Saturn.DataAccess.Webservice.ISalonReader {
        
        private BeginOperationDelegate onBeginGetSalonDelegate;
        
        private EndOperationDelegate onEndGetSalonDelegate;
        
        private System.Threading.SendOrPostCallback onGetSalonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSalonsDelegate;
        
        private EndOperationDelegate onEndGetSalonsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSalonsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSalonsLimitedDelegate;
        
        private EndOperationDelegate onEndGetSalonsLimitedDelegate;
        
        private System.Threading.SendOrPostCallback onGetSalonsLimitedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSalonsSortedDelegate;
        
        private EndOperationDelegate onEndGetSalonsSortedDelegate;
        
        private System.Threading.SendOrPostCallback onGetSalonsSortedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSalonLastInsertedIdDelegate;
        
        private EndOperationDelegate onEndGetSalonLastInsertedIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetSalonLastInsertedIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchSalonsDelegate;
        
        private EndOperationDelegate onEndSearchSalonsDelegate;
        
        private System.Threading.SendOrPostCallback onSearchSalonsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SalonReaderClient() : 
                base(SalonReaderClient.GetDefaultBinding(), SalonReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public SalonReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(SalonReaderClient.GetBindingForEndpoint(endpointConfiguration), SalonReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public SalonReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SalonReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public SalonReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SalonReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public SalonReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetSalonCompletedEventArgs> GetSalonCompleted;
        
        public event System.EventHandler<GetSalonsCompletedEventArgs> GetSalonsCompleted;
        
        public event System.EventHandler<GetSalonsLimitedCompletedEventArgs> GetSalonsLimitedCompleted;
        
        public event System.EventHandler<GetSalonsSortedCompletedEventArgs> GetSalonsSortedCompleted;
        
        public event System.EventHandler<GetSalonLastInsertedIdCompletedEventArgs> GetSalonLastInsertedIdCompleted;
        
        public event System.EventHandler<SearchSalonsCompletedEventArgs> SearchSalonsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.BeginGetSalon(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSalon(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Salon SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.EndGetSalon(System.IAsyncResult result) {
            return base.Channel.EndGetSalon(result);
        }
        
        private System.IAsyncResult OnBeginGetSalon(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).BeginGetSalon(code, callback, asyncState);
        }
        
        private object[] OnEndGetSalon(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Salon retVal = ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).EndGetSalon(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSalonCompleted(object state) {
            if ((this.GetSalonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSalonCompleted(this, new GetSalonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSalonAsync(int code) {
            this.GetSalonAsync(code, null);
        }
        
        public void GetSalonAsync(int code, object userState) {
            if ((this.onBeginGetSalonDelegate == null)) {
                this.onBeginGetSalonDelegate = new BeginOperationDelegate(this.OnBeginGetSalon);
            }
            if ((this.onEndGetSalonDelegate == null)) {
                this.onEndGetSalonDelegate = new EndOperationDelegate(this.OnEndGetSalon);
            }
            if ((this.onGetSalonCompletedDelegate == null)) {
                this.onGetSalonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSalonCompleted);
            }
            base.InvokeAsync(this.onBeginGetSalonDelegate, new object[] {
                        code}, this.onEndGetSalonDelegate, this.onGetSalonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.BeginGetSalons(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSalons(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Salon[] SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.EndGetSalons(System.IAsyncResult result) {
            return base.Channel.EndGetSalons(result);
        }
        
        private System.IAsyncResult OnBeginGetSalons(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).BeginGetSalons(callback, asyncState);
        }
        
        private object[] OnEndGetSalons(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Salon[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).EndGetSalons(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSalonsCompleted(object state) {
            if ((this.GetSalonsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSalonsCompleted(this, new GetSalonsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSalonsAsync() {
            this.GetSalonsAsync(null);
        }
        
        public void GetSalonsAsync(object userState) {
            if ((this.onBeginGetSalonsDelegate == null)) {
                this.onBeginGetSalonsDelegate = new BeginOperationDelegate(this.OnBeginGetSalons);
            }
            if ((this.onEndGetSalonsDelegate == null)) {
                this.onEndGetSalonsDelegate = new EndOperationDelegate(this.OnEndGetSalons);
            }
            if ((this.onGetSalonsCompletedDelegate == null)) {
                this.onGetSalonsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSalonsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSalonsDelegate, null, this.onEndGetSalonsDelegate, this.onGetSalonsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.BeginGetSalonsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSalonsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Salon[] SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.EndGetSalonsLimited(System.IAsyncResult result) {
            return base.Channel.EndGetSalonsLimited(result);
        }
        
        private System.IAsyncResult OnBeginGetSalonsLimited(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).BeginGetSalonsLimited(indexFirstElement, numberOfResults, callback, asyncState);
        }
        
        private object[] OnEndGetSalonsLimited(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Salon[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).EndGetSalonsLimited(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSalonsLimitedCompleted(object state) {
            if ((this.GetSalonsLimitedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSalonsLimitedCompleted(this, new GetSalonsLimitedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSalonsLimitedAsync(int indexFirstElement, int numberOfResults) {
            this.GetSalonsLimitedAsync(indexFirstElement, numberOfResults, null);
        }
        
        public void GetSalonsLimitedAsync(int indexFirstElement, int numberOfResults, object userState) {
            if ((this.onBeginGetSalonsLimitedDelegate == null)) {
                this.onBeginGetSalonsLimitedDelegate = new BeginOperationDelegate(this.OnBeginGetSalonsLimited);
            }
            if ((this.onEndGetSalonsLimitedDelegate == null)) {
                this.onEndGetSalonsLimitedDelegate = new EndOperationDelegate(this.OnEndGetSalonsLimited);
            }
            if ((this.onGetSalonsLimitedCompletedDelegate == null)) {
                this.onGetSalonsLimitedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSalonsLimitedCompleted);
            }
            base.InvokeAsync(this.onBeginGetSalonsLimitedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults}, this.onEndGetSalonsLimitedDelegate, this.onGetSalonsLimitedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.BeginGetSalonsSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSalonsSorted(indexFirstElement, numberOfResults, order, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Salon[] SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.EndGetSalonsSorted(System.IAsyncResult result) {
            return base.Channel.EndGetSalonsSorted(result);
        }
        
        private System.IAsyncResult OnBeginGetSalonsSorted(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int indexFirstElement = ((int)(inValues[0]));
            int numberOfResults = ((int)(inValues[1]));
            SolarSystem.Saturn.DataAccess.Webservice.SortOrder order = ((SolarSystem.Saturn.DataAccess.Webservice.SortOrder)(inValues[2]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).BeginGetSalonsSorted(indexFirstElement, numberOfResults, order, callback, asyncState);
        }
        
        private object[] OnEndGetSalonsSorted(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Salon[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).EndGetSalonsSorted(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSalonsSortedCompleted(object state) {
            if ((this.GetSalonsSortedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSalonsSortedCompleted(this, new GetSalonsSortedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSalonsSortedAsync(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order) {
            this.GetSalonsSortedAsync(indexFirstElement, numberOfResults, order, null);
        }
        
        public void GetSalonsSortedAsync(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, object userState) {
            if ((this.onBeginGetSalonsSortedDelegate == null)) {
                this.onBeginGetSalonsSortedDelegate = new BeginOperationDelegate(this.OnBeginGetSalonsSorted);
            }
            if ((this.onEndGetSalonsSortedDelegate == null)) {
                this.onEndGetSalonsSortedDelegate = new EndOperationDelegate(this.OnEndGetSalonsSorted);
            }
            if ((this.onGetSalonsSortedCompletedDelegate == null)) {
                this.onGetSalonsSortedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSalonsSortedCompleted);
            }
            base.InvokeAsync(this.onBeginGetSalonsSortedDelegate, new object[] {
                        indexFirstElement,
                        numberOfResults,
                        order}, this.onEndGetSalonsSortedDelegate, this.onGetSalonsSortedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.BeginGetSalonLastInsertedId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSalonLastInsertedId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.EndGetSalonLastInsertedId(System.IAsyncResult result) {
            return base.Channel.EndGetSalonLastInsertedId(result);
        }
        
        private System.IAsyncResult OnBeginGetSalonLastInsertedId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).BeginGetSalonLastInsertedId(callback, asyncState);
        }
        
        private object[] OnEndGetSalonLastInsertedId(System.IAsyncResult result) {
            int retVal = ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).EndGetSalonLastInsertedId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSalonLastInsertedIdCompleted(object state) {
            if ((this.GetSalonLastInsertedIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSalonLastInsertedIdCompleted(this, new GetSalonLastInsertedIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSalonLastInsertedIdAsync() {
            this.GetSalonLastInsertedIdAsync(null);
        }
        
        public void GetSalonLastInsertedIdAsync(object userState) {
            if ((this.onBeginGetSalonLastInsertedIdDelegate == null)) {
                this.onBeginGetSalonLastInsertedIdDelegate = new BeginOperationDelegate(this.OnBeginGetSalonLastInsertedId);
            }
            if ((this.onEndGetSalonLastInsertedIdDelegate == null)) {
                this.onEndGetSalonLastInsertedIdDelegate = new EndOperationDelegate(this.OnEndGetSalonLastInsertedId);
            }
            if ((this.onGetSalonLastInsertedIdCompletedDelegate == null)) {
                this.onGetSalonLastInsertedIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSalonLastInsertedIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetSalonLastInsertedIdDelegate, null, this.onEndGetSalonLastInsertedIdDelegate, this.onGetSalonLastInsertedIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.BeginSearchSalons(string keywords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchSalons(keywords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Salon[] SolarSystem.Saturn.DataAccess.Webservice.ISalonReader.EndSearchSalons(System.IAsyncResult result) {
            return base.Channel.EndSearchSalons(result);
        }
        
        private System.IAsyncResult OnBeginSearchSalons(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keywords = ((string)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).BeginSearchSalons(keywords, callback, asyncState);
        }
        
        private object[] OnEndSearchSalons(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Salon[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.ISalonReader)(this)).EndSearchSalons(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchSalonsCompleted(object state) {
            if ((this.SearchSalonsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchSalonsCompleted(this, new SearchSalonsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchSalonsAsync(string keywords) {
            this.SearchSalonsAsync(keywords, null);
        }
        
        public void SearchSalonsAsync(string keywords, object userState) {
            if ((this.onBeginSearchSalonsDelegate == null)) {
                this.onBeginSearchSalonsDelegate = new BeginOperationDelegate(this.OnBeginSearchSalons);
            }
            if ((this.onEndSearchSalonsDelegate == null)) {
                this.onEndSearchSalonsDelegate = new EndOperationDelegate(this.OnEndSearchSalons);
            }
            if ((this.onSearchSalonsCompletedDelegate == null)) {
                this.onSearchSalonsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchSalonsCompleted);
            }
            base.InvokeAsync(this.onBeginSearchSalonsDelegate, new object[] {
                        keywords}, this.onEndSearchSalonsDelegate, this.onSearchSalonsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SolarSystem.Saturn.DataAccess.Webservice.ISalonReader CreateChannel() {
            return new SalonReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISalonReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISalonReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return SalonReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISalonReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return SalonReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISalonReader);
        }
        
        private class SalonReaderClientChannel : ChannelBase<SolarSystem.Saturn.DataAccess.Webservice.ISalonReader>, SolarSystem.Saturn.DataAccess.Webservice.ISalonReader {
            
            public SalonReaderClientChannel(System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.ISalonReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSalon(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetSalon", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Salon EndGetSalon(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Salon _result = ((SolarSystem.Saturn.DataAccess.Webservice.Salon)(base.EndInvoke("GetSalon", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSalons(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSalons", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Salon[] EndGetSalons(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Salon[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Salon[])(base.EndInvoke("GetSalons", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSalonsLimited(int indexFirstElement, int numberOfResults, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                System.IAsyncResult _result = base.BeginInvoke("GetSalonsLimited", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Salon[] EndGetSalonsLimited(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Salon[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Salon[])(base.EndInvoke("GetSalonsLimited", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSalonsSorted(int indexFirstElement, int numberOfResults, SolarSystem.Saturn.DataAccess.Webservice.SortOrder order, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = indexFirstElement;
                _args[1] = numberOfResults;
                _args[2] = order;
                System.IAsyncResult _result = base.BeginInvoke("GetSalonsSorted", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Salon[] EndGetSalonsSorted(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Salon[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Salon[])(base.EndInvoke("GetSalonsSorted", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSalonLastInsertedId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSalonLastInsertedId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetSalonLastInsertedId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetSalonLastInsertedId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchSalons(string keywords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = keywords;
                System.IAsyncResult _result = base.BeginInvoke("SearchSalons", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Salon[] EndSearchSalons(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Salon[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Salon[])(base.EndInvoke("SearchSalons", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_ISalonReader,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Webservice.IVilleReader")]
    public interface IVilleReader {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVilleReader/GetVille", ReplyAction="http://tempuri.org/IVilleReader/GetVilleResponse")]
        System.IAsyncResult BeginGetVille(int code, System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Ville EndGetVille(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVilleReader/GetVilles", ReplyAction="http://tempuri.org/IVilleReader/GetVillesResponse")]
        System.IAsyncResult BeginGetVilles(System.AsyncCallback callback, object asyncState);
        
        SolarSystem.Saturn.DataAccess.Webservice.Ville[] EndGetVilles(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVilleReaderChannel : SolarSystem.Saturn.DataAccess.Webservice.IVilleReader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVilleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVilleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Ville Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Ville)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVillesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVillesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SolarSystem.Saturn.DataAccess.Webservice.Ville[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SolarSystem.Saturn.DataAccess.Webservice.Ville[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VilleReaderClient : System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IVilleReader>, SolarSystem.Saturn.DataAccess.Webservice.IVilleReader {
        
        private BeginOperationDelegate onBeginGetVilleDelegate;
        
        private EndOperationDelegate onEndGetVilleDelegate;
        
        private System.Threading.SendOrPostCallback onGetVilleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVillesDelegate;
        
        private EndOperationDelegate onEndGetVillesDelegate;
        
        private System.Threading.SendOrPostCallback onGetVillesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public VilleReaderClient() : 
                base(VilleReaderClient.GetDefaultBinding(), VilleReaderClient.GetDefaultEndpointAddress()) {
        }
        
        public VilleReaderClient(EndpointConfiguration endpointConfiguration) : 
                base(VilleReaderClient.GetBindingForEndpoint(endpointConfiguration), VilleReaderClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public VilleReaderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(VilleReaderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public VilleReaderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(VilleReaderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public VilleReaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetVilleCompletedEventArgs> GetVilleCompleted;
        
        public event System.EventHandler<GetVillesCompletedEventArgs> GetVillesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IVilleReader.BeginGetVille(int code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVille(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Ville SolarSystem.Saturn.DataAccess.Webservice.IVilleReader.EndGetVille(System.IAsyncResult result) {
            return base.Channel.EndGetVille(result);
        }
        
        private System.IAsyncResult OnBeginGetVille(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int code = ((int)(inValues[0]));
            return ((SolarSystem.Saturn.DataAccess.Webservice.IVilleReader)(this)).BeginGetVille(code, callback, asyncState);
        }
        
        private object[] OnEndGetVille(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Ville retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IVilleReader)(this)).EndGetVille(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVilleCompleted(object state) {
            if ((this.GetVilleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVilleCompleted(this, new GetVilleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVilleAsync(int code) {
            this.GetVilleAsync(code, null);
        }
        
        public void GetVilleAsync(int code, object userState) {
            if ((this.onBeginGetVilleDelegate == null)) {
                this.onBeginGetVilleDelegate = new BeginOperationDelegate(this.OnBeginGetVille);
            }
            if ((this.onEndGetVilleDelegate == null)) {
                this.onEndGetVilleDelegate = new EndOperationDelegate(this.OnEndGetVille);
            }
            if ((this.onGetVilleCompletedDelegate == null)) {
                this.onGetVilleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVilleCompleted);
            }
            base.InvokeAsync(this.onBeginGetVilleDelegate, new object[] {
                        code}, this.onEndGetVilleDelegate, this.onGetVilleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SolarSystem.Saturn.DataAccess.Webservice.IVilleReader.BeginGetVilles(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVilles(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SolarSystem.Saturn.DataAccess.Webservice.Ville[] SolarSystem.Saturn.DataAccess.Webservice.IVilleReader.EndGetVilles(System.IAsyncResult result) {
            return base.Channel.EndGetVilles(result);
        }
        
        private System.IAsyncResult OnBeginGetVilles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SolarSystem.Saturn.DataAccess.Webservice.IVilleReader)(this)).BeginGetVilles(callback, asyncState);
        }
        
        private object[] OnEndGetVilles(System.IAsyncResult result) {
            SolarSystem.Saturn.DataAccess.Webservice.Ville[] retVal = ((SolarSystem.Saturn.DataAccess.Webservice.IVilleReader)(this)).EndGetVilles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVillesCompleted(object state) {
            if ((this.GetVillesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVillesCompleted(this, new GetVillesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVillesAsync() {
            this.GetVillesAsync(null);
        }
        
        public void GetVillesAsync(object userState) {
            if ((this.onBeginGetVillesDelegate == null)) {
                this.onBeginGetVillesDelegate = new BeginOperationDelegate(this.OnBeginGetVilles);
            }
            if ((this.onEndGetVillesDelegate == null)) {
                this.onEndGetVillesDelegate = new EndOperationDelegate(this.OnEndGetVilles);
            }
            if ((this.onGetVillesCompletedDelegate == null)) {
                this.onGetVillesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVillesCompleted);
            }
            base.InvokeAsync(this.onBeginGetVillesDelegate, null, this.onEndGetVillesDelegate, this.onGetVillesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SolarSystem.Saturn.DataAccess.Webservice.IVilleReader CreateChannel() {
            return new VilleReaderClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IVilleReader)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IVilleReader)) {
                return new System.ServiceModel.EndpointAddress("http://www.epsilab.net/webservices/ReadersService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return VilleReaderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IVilleReader);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return VilleReaderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IVilleReader);
        }
        
        private class VilleReaderClientChannel : ChannelBase<SolarSystem.Saturn.DataAccess.Webservice.IVilleReader>, SolarSystem.Saturn.DataAccess.Webservice.IVilleReader {
            
            public VilleReaderClientChannel(System.ServiceModel.ClientBase<SolarSystem.Saturn.DataAccess.Webservice.IVilleReader> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetVille(int code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = code;
                System.IAsyncResult _result = base.BeginInvoke("GetVille", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Ville EndGetVille(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Ville _result = ((SolarSystem.Saturn.DataAccess.Webservice.Ville)(base.EndInvoke("GetVille", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVilles(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVilles", _args, callback, asyncState);
                return _result;
            }
            
            public SolarSystem.Saturn.DataAccess.Webservice.Ville[] EndGetVilles(System.IAsyncResult result) {
                object[] _args = new object[0];
                SolarSystem.Saturn.DataAccess.Webservice.Ville[] _result = ((SolarSystem.Saturn.DataAccess.Webservice.Ville[])(base.EndInvoke("GetVilles", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IVilleReader,
        }
    }
}
