<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="APPLICATION_NAME" xml:space="preserve">
    <value>EPSILab</value>
  </data>
  <data name="PageTitle.Text" xml:space="preserve">
    <value>EPSILab</value>
  </data>
  <data name="PinButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Pin</value>
  </data>
  <data name="RefreshButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="ShareButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="TxtConferencesHeader.Text" xml:space="preserve">
    <value>Conferences</value>
  </data>
  <data name="TxtConferencesSubHeader.Text" xml:space="preserve">
    <value>The list of conferences in the campus.</value>
  </data>
  <data name="TxtMembresHeader.Text" xml:space="preserve">
    <value>Association office</value>
  </data>
  <data name="TxtMembresSubHeader.Text" xml:space="preserve">
    <value>On this page, the office of each campus.</value>
  </data>
  <data name="TxtNewsHeader.Text" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="TxtNewsSubHeader.Text" xml:space="preserve">
    <value>Find the latest Microsoft and our association news.</value>
  </data>
  <data name="TxtNoConnection.Text" xml:space="preserve">
    <value>Network is not available at this time. Thank you try again later.</value>
  </data>
  <data name="TxtProjetsHeader.Text" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="TxtProjetsSubHeader.Text" xml:space="preserve">
    <value>Find our list of projects</value>
  </data>
  <data name="TxtSalonsHeader.Text" xml:space="preserve">
    <value>Shows</value>
  </data>
  <data name="TxtSalonsSubHeader.Text" xml:space="preserve">
    <value>Find the next Microsoft's or its partners's meetings.</value>
  </data>
  <data name="WebsiteButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="AboutSnappedText.DataContext" xml:space="preserve">
    <value>EPSILab is a student association that promotes Microsoft products and technologies in schools EPSI group. Its activities focus on training students in Microsoft technologies, projects, organization of lectures in school, participation in the Imagine Cup competition and major events from Microsoft.</value>
  </data>
  <data name="AboutText.DataContext" xml:space="preserve">
    <value>EPSILab is a student association EPSI school whose goal is to study and promote Microsoft products and technologies. {0} {0} Since its inception, EPSILab also extended to the campus in Paris, Lyon and Nantes. Our activities are mainly focused on training students to Microsoft technologies as well as the organization of events such as conferences within the campus with speakers from Microsoft on topics before. We are also present at major events like TechDays in Paris or the Microsoft Days in the province. {0} {0} Each lab is lead by Microsoft Student Partners. Their mission is to ensure continuity in the activities of the association and to strengthen the links between the EPSI Microsoft France. {0} {0} We are also in partnership with EPSI Arras communication pole (called PôleCom). You can find some of our articles on Nord-Pas-de-Calais high tech news websites. {0} {0} To date, EPSILab remains active, particularly focusing on current technologies such as Windows 8 and Windows Phone, but also forget WPF, Kinect, Azure, Silverlight, etc. ...</value>
  </data>
  <data name="AboutPageTitle.Text" xml:space="preserve">
    <value>About</value>
  </data>
</root>